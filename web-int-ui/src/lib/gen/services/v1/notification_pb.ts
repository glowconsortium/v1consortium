// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file services/v1/notification.proto (package v1consortium.services, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Notifications } from "../../pbentity/notifications_pb";
import { file_pbentity_notifications } from "../../pbentity/notifications_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file services/v1/notification.proto.
 */
export const file_services_v1_notification: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_protobuf_timestamp, file_pbentity_notifications]);

/**
 * Notification Management Messages
 *
 * @generated from message v1consortium.services.SendNotificationRequest
 */
export type SendNotificationRequest = Message<"v1consortium.services.SendNotificationRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * Optional: specific user, otherwise org-wide
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * "test_reminder", "certificate_expiring", "violation_alert", etc.
   *
   * @generated from field: string notification_type = 3;
   */
  notificationType: string;

  /**
   * "email", "sms", "in_app", "phone"
   *
   * @generated from field: string channel = 4;
   */
  channel: string;

  /**
   * "low", "medium", "high", "urgent"
   *
   * @generated from field: string priority = 5;
   */
  priority: string;

  /**
   * @generated from field: string subject = 6;
   */
  subject: string;

  /**
   * @generated from field: string message = 7;
   */
  message: string;

  /**
   * Data for template rendering
   *
   * @generated from field: map<string, string> template_data = 8;
   */
  templateData: { [key: string]: string };

  /**
   * Optional: use predefined template
   *
   * @generated from field: string template_id = 9;
   */
  templateId: string;

  /**
   * Optional: schedule for future delivery
   *
   * @generated from field: google.protobuf.Timestamp scheduled_for = 10;
   */
  scheduledFor?: Timestamp;

  /**
   * Extra email addresses
   *
   * @generated from field: repeated string additional_recipients = 11;
   */
  additionalRecipients: string[];
};

/**
 * Describes the message v1consortium.services.SendNotificationRequest.
 * Use `create(SendNotificationRequestSchema)` to create a new message.
 */
export const SendNotificationRequestSchema: GenMessage<SendNotificationRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 0);

/**
 * @generated from message v1consortium.services.SendNotificationResponse
 */
export type SendNotificationResponse = Message<"v1consortium.services.SendNotificationResponse"> & {
  /**
   * @generated from field: pbentity.Notifications notification = 1;
   */
  notification?: Notifications;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message v1consortium.services.SendNotificationResponse.
 * Use `create(SendNotificationResponseSchema)` to create a new message.
 */
export const SendNotificationResponseSchema: GenMessage<SendNotificationResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 1);

/**
 * @generated from message v1consortium.services.GetNotificationRequest
 */
export type GetNotificationRequest = Message<"v1consortium.services.GetNotificationRequest"> & {
  /**
   * @generated from field: string notification_id = 1;
   */
  notificationId: string;
};

/**
 * Describes the message v1consortium.services.GetNotificationRequest.
 * Use `create(GetNotificationRequestSchema)` to create a new message.
 */
export const GetNotificationRequestSchema: GenMessage<GetNotificationRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 2);

/**
 * @generated from message v1consortium.services.GetNotificationResponse
 */
export type GetNotificationResponse = Message<"v1consortium.services.GetNotificationResponse"> & {
  /**
   * @generated from field: pbentity.Notifications notification = 1;
   */
  notification?: Notifications;
};

/**
 * Describes the message v1consortium.services.GetNotificationResponse.
 * Use `create(GetNotificationResponseSchema)` to create a new message.
 */
export const GetNotificationResponseSchema: GenMessage<GetNotificationResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 3);

/**
 * @generated from message v1consortium.services.ListNotificationsRequest
 */
export type ListNotificationsRequest = Message<"v1consortium.services.ListNotificationsRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * Optional: filter by user
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * Optional: filter by type
   *
   * @generated from field: string notification_type = 3;
   */
  notificationType: string;

  /**
   * Optional: filter by channel
   *
   * @generated from field: string channel = 4;
   */
  channel: string;

  /**
   * Optional: filter by delivery status
   *
   * @generated from field: string status = 5;
   */
  status: string;

  /**
   * Optional: filter by priority
   *
   * @generated from field: string priority = 6;
   */
  priority: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_date = 7;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_date = 8;
   */
  endDate?: Timestamp;

  /**
   * Optional: show only unread notifications
   *
   * @generated from field: bool unread_only = 9;
   */
  unreadOnly: boolean;

  /**
   * @generated from field: int32 page = 10;
   */
  page: number;

  /**
   * @generated from field: int32 page_size = 11;
   */
  pageSize: number;
};

/**
 * Describes the message v1consortium.services.ListNotificationsRequest.
 * Use `create(ListNotificationsRequestSchema)` to create a new message.
 */
export const ListNotificationsRequestSchema: GenMessage<ListNotificationsRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 4);

/**
 * @generated from message v1consortium.services.ListNotificationsResponse
 */
export type ListNotificationsResponse = Message<"v1consortium.services.ListNotificationsResponse"> & {
  /**
   * @generated from field: repeated pbentity.Notifications notifications = 1;
   */
  notifications: Notifications[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  /**
   * @generated from field: int32 unread_count = 3;
   */
  unreadCount: number;

  /**
   * @generated from field: int32 page = 4;
   */
  page: number;

  /**
   * @generated from field: int32 page_size = 5;
   */
  pageSize: number;
};

/**
 * Describes the message v1consortium.services.ListNotificationsResponse.
 * Use `create(ListNotificationsResponseSchema)` to create a new message.
 */
export const ListNotificationsResponseSchema: GenMessage<ListNotificationsResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 5);

/**
 * @generated from message v1consortium.services.MarkNotificationReadRequest
 */
export type MarkNotificationReadRequest = Message<"v1consortium.services.MarkNotificationReadRequest"> & {
  /**
   * @generated from field: string notification_id = 1;
   */
  notificationId: string;

  /**
   * @generated from field: string read_by = 2;
   */
  readBy: string;
};

/**
 * Describes the message v1consortium.services.MarkNotificationReadRequest.
 * Use `create(MarkNotificationReadRequestSchema)` to create a new message.
 */
export const MarkNotificationReadRequestSchema: GenMessage<MarkNotificationReadRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 6);

/**
 * @generated from message v1consortium.services.MarkNotificationReadResponse
 */
export type MarkNotificationReadResponse = Message<"v1consortium.services.MarkNotificationReadResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message v1consortium.services.MarkNotificationReadResponse.
 * Use `create(MarkNotificationReadResponseSchema)` to create a new message.
 */
export const MarkNotificationReadResponseSchema: GenMessage<MarkNotificationReadResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 7);

/**
 * @generated from message v1consortium.services.MarkAllNotificationsReadRequest
 */
export type MarkAllNotificationsReadRequest = Message<"v1consortium.services.MarkAllNotificationsReadRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message v1consortium.services.MarkAllNotificationsReadRequest.
 * Use `create(MarkAllNotificationsReadRequestSchema)` to create a new message.
 */
export const MarkAllNotificationsReadRequestSchema: GenMessage<MarkAllNotificationsReadRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 8);

/**
 * @generated from message v1consortium.services.MarkAllNotificationsReadResponse
 */
export type MarkAllNotificationsReadResponse = Message<"v1consortium.services.MarkAllNotificationsReadResponse"> & {
  /**
   * @generated from field: int32 marked_count = 1;
   */
  markedCount: number;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message v1consortium.services.MarkAllNotificationsReadResponse.
 * Use `create(MarkAllNotificationsReadResponseSchema)` to create a new message.
 */
export const MarkAllNotificationsReadResponseSchema: GenMessage<MarkAllNotificationsReadResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 9);

/**
 * Notification Templates
 *
 * @generated from message v1consortium.services.CreateNotificationTemplateRequest
 */
export type CreateNotificationTemplateRequest = Message<"v1consortium.services.CreateNotificationTemplateRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string template_name = 2;
   */
  templateName: string;

  /**
   * @generated from field: string notification_type = 3;
   */
  notificationType: string;

  /**
   * @generated from field: string channel = 4;
   */
  channel: string;

  /**
   * @generated from field: string subject_template = 5;
   */
  subjectTemplate: string;

  /**
   * @generated from field: string body_template = 6;
   */
  bodyTemplate: string;

  /**
   * Variables that must be provided
   *
   * @generated from field: repeated string required_variables = 7;
   */
  requiredVariables: string[];

  /**
   * System templates are read-only
   *
   * @generated from field: bool is_system_template = 8;
   */
  isSystemTemplate: boolean;
};

/**
 * Describes the message v1consortium.services.CreateNotificationTemplateRequest.
 * Use `create(CreateNotificationTemplateRequestSchema)` to create a new message.
 */
export const CreateNotificationTemplateRequestSchema: GenMessage<CreateNotificationTemplateRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 10);

/**
 * @generated from message v1consortium.services.CreateNotificationTemplateResponse
 */
export type CreateNotificationTemplateResponse = Message<"v1consortium.services.CreateNotificationTemplateResponse"> & {
  /**
   * @generated from field: string template_id = 1;
   */
  templateId: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message v1consortium.services.CreateNotificationTemplateResponse.
 * Use `create(CreateNotificationTemplateResponseSchema)` to create a new message.
 */
export const CreateNotificationTemplateResponseSchema: GenMessage<CreateNotificationTemplateResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 11);

/**
 * @generated from message v1consortium.services.GetNotificationTemplateRequest
 */
export type GetNotificationTemplateRequest = Message<"v1consortium.services.GetNotificationTemplateRequest"> & {
  /**
   * @generated from field: string template_id = 1;
   */
  templateId: string;
};

/**
 * Describes the message v1consortium.services.GetNotificationTemplateRequest.
 * Use `create(GetNotificationTemplateRequestSchema)` to create a new message.
 */
export const GetNotificationTemplateRequestSchema: GenMessage<GetNotificationTemplateRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 12);

/**
 * @generated from message v1consortium.services.NotificationTemplate
 */
export type NotificationTemplate = Message<"v1consortium.services.NotificationTemplate"> & {
  /**
   * @generated from field: string template_id = 1;
   */
  templateId: string;

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * @generated from field: string template_name = 3;
   */
  templateName: string;

  /**
   * @generated from field: string notification_type = 4;
   */
  notificationType: string;

  /**
   * @generated from field: string channel = 5;
   */
  channel: string;

  /**
   * @generated from field: string subject_template = 6;
   */
  subjectTemplate: string;

  /**
   * @generated from field: string body_template = 7;
   */
  bodyTemplate: string;

  /**
   * @generated from field: repeated string required_variables = 8;
   */
  requiredVariables: string[];

  /**
   * @generated from field: bool is_system_template = 9;
   */
  isSystemTemplate: boolean;

  /**
   * @generated from field: bool is_active = 10;
   */
  isActive: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 11;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 12;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message v1consortium.services.NotificationTemplate.
 * Use `create(NotificationTemplateSchema)` to create a new message.
 */
export const NotificationTemplateSchema: GenMessage<NotificationTemplate> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 13);

/**
 * @generated from message v1consortium.services.GetNotificationTemplateResponse
 */
export type GetNotificationTemplateResponse = Message<"v1consortium.services.GetNotificationTemplateResponse"> & {
  /**
   * @generated from field: v1consortium.services.NotificationTemplate template = 1;
   */
  template?: NotificationTemplate;
};

/**
 * Describes the message v1consortium.services.GetNotificationTemplateResponse.
 * Use `create(GetNotificationTemplateResponseSchema)` to create a new message.
 */
export const GetNotificationTemplateResponseSchema: GenMessage<GetNotificationTemplateResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 14);

/**
 * @generated from message v1consortium.services.ListNotificationTemplatesRequest
 */
export type ListNotificationTemplatesRequest = Message<"v1consortium.services.ListNotificationTemplatesRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * Optional: filter by type
   *
   * @generated from field: string notification_type = 2;
   */
  notificationType: string;

  /**
   * Optional: filter by channel
   *
   * @generated from field: string channel = 3;
   */
  channel: string;

  /**
   * Include system-wide templates
   *
   * @generated from field: bool include_system_templates = 4;
   */
  includeSystemTemplates: boolean;

  /**
   * @generated from field: bool active_only = 5;
   */
  activeOnly: boolean;
};

/**
 * Describes the message v1consortium.services.ListNotificationTemplatesRequest.
 * Use `create(ListNotificationTemplatesRequestSchema)` to create a new message.
 */
export const ListNotificationTemplatesRequestSchema: GenMessage<ListNotificationTemplatesRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 15);

/**
 * @generated from message v1consortium.services.ListNotificationTemplatesResponse
 */
export type ListNotificationTemplatesResponse = Message<"v1consortium.services.ListNotificationTemplatesResponse"> & {
  /**
   * @generated from field: repeated v1consortium.services.NotificationTemplate templates = 1;
   */
  templates: NotificationTemplate[];
};

/**
 * Describes the message v1consortium.services.ListNotificationTemplatesResponse.
 * Use `create(ListNotificationTemplatesResponseSchema)` to create a new message.
 */
export const ListNotificationTemplatesResponseSchema: GenMessage<ListNotificationTemplatesResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 16);

/**
 * @generated from message v1consortium.services.UpdateNotificationTemplateRequest
 */
export type UpdateNotificationTemplateRequest = Message<"v1consortium.services.UpdateNotificationTemplateRequest"> & {
  /**
   * @generated from field: string template_id = 1;
   */
  templateId: string;

  /**
   * @generated from field: string template_name = 2;
   */
  templateName: string;

  /**
   * @generated from field: string subject_template = 3;
   */
  subjectTemplate: string;

  /**
   * @generated from field: string body_template = 4;
   */
  bodyTemplate: string;

  /**
   * @generated from field: repeated string required_variables = 5;
   */
  requiredVariables: string[];

  /**
   * @generated from field: bool is_active = 6;
   */
  isActive: boolean;
};

/**
 * Describes the message v1consortium.services.UpdateNotificationTemplateRequest.
 * Use `create(UpdateNotificationTemplateRequestSchema)` to create a new message.
 */
export const UpdateNotificationTemplateRequestSchema: GenMessage<UpdateNotificationTemplateRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 17);

/**
 * @generated from message v1consortium.services.UpdateNotificationTemplateResponse
 */
export type UpdateNotificationTemplateResponse = Message<"v1consortium.services.UpdateNotificationTemplateResponse"> & {
  /**
   * @generated from field: v1consortium.services.NotificationTemplate template = 1;
   */
  template?: NotificationTemplate;
};

/**
 * Describes the message v1consortium.services.UpdateNotificationTemplateResponse.
 * Use `create(UpdateNotificationTemplateResponseSchema)` to create a new message.
 */
export const UpdateNotificationTemplateResponseSchema: GenMessage<UpdateNotificationTemplateResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 18);

/**
 * Notification Preferences
 *
 * @generated from message v1consortium.services.GetNotificationPreferencesRequest
 */
export type GetNotificationPreferencesRequest = Message<"v1consortium.services.GetNotificationPreferencesRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * Describes the message v1consortium.services.GetNotificationPreferencesRequest.
 * Use `create(GetNotificationPreferencesRequestSchema)` to create a new message.
 */
export const GetNotificationPreferencesRequestSchema: GenMessage<GetNotificationPreferencesRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 19);

/**
 * @generated from message v1consortium.services.NotificationPreference
 */
export type NotificationPreference = Message<"v1consortium.services.NotificationPreference"> & {
  /**
   * @generated from field: string notification_type = 1;
   */
  notificationType: string;

  /**
   * @generated from field: bool email_enabled = 2;
   */
  emailEnabled: boolean;

  /**
   * @generated from field: bool sms_enabled = 3;
   */
  smsEnabled: boolean;

  /**
   * @generated from field: bool in_app_enabled = 4;
   */
  inAppEnabled: boolean;

  /**
   * @generated from field: bool phone_enabled = 5;
   */
  phoneEnabled: boolean;

  /**
   * "immediate", "daily_digest", "weekly_digest"
   *
   * @generated from field: string frequency = 6;
   */
  frequency: string;
};

/**
 * Describes the message v1consortium.services.NotificationPreference.
 * Use `create(NotificationPreferenceSchema)` to create a new message.
 */
export const NotificationPreferenceSchema: GenMessage<NotificationPreference> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 20);

/**
 * @generated from message v1consortium.services.GetNotificationPreferencesResponse
 */
export type GetNotificationPreferencesResponse = Message<"v1consortium.services.GetNotificationPreferencesResponse"> & {
  /**
   * @generated from field: repeated v1consortium.services.NotificationPreference preferences = 1;
   */
  preferences: NotificationPreference[];
};

/**
 * Describes the message v1consortium.services.GetNotificationPreferencesResponse.
 * Use `create(GetNotificationPreferencesResponseSchema)` to create a new message.
 */
export const GetNotificationPreferencesResponseSchema: GenMessage<GetNotificationPreferencesResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 21);

/**
 * @generated from message v1consortium.services.UpdateNotificationPreferencesRequest
 */
export type UpdateNotificationPreferencesRequest = Message<"v1consortium.services.UpdateNotificationPreferencesRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: repeated v1consortium.services.NotificationPreference preferences = 2;
   */
  preferences: NotificationPreference[];
};

/**
 * Describes the message v1consortium.services.UpdateNotificationPreferencesRequest.
 * Use `create(UpdateNotificationPreferencesRequestSchema)` to create a new message.
 */
export const UpdateNotificationPreferencesRequestSchema: GenMessage<UpdateNotificationPreferencesRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 22);

/**
 * @generated from message v1consortium.services.UpdateNotificationPreferencesResponse
 */
export type UpdateNotificationPreferencesResponse = Message<"v1consortium.services.UpdateNotificationPreferencesResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message v1consortium.services.UpdateNotificationPreferencesResponse.
 * Use `create(UpdateNotificationPreferencesResponseSchema)` to create a new message.
 */
export const UpdateNotificationPreferencesResponseSchema: GenMessage<UpdateNotificationPreferencesResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 23);

/**
 * Bulk Notifications
 *
 * @generated from message v1consortium.services.SendBulkNotificationRequest
 */
export type SendBulkNotificationRequest = Message<"v1consortium.services.SendBulkNotificationRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * Target users
   *
   * @generated from field: repeated string user_ids = 2;
   */
  userIds: string[];

  /**
   * @generated from field: string notification_type = 3;
   */
  notificationType: string;

  /**
   * @generated from field: string channel = 4;
   */
  channel: string;

  /**
   * @generated from field: string priority = 5;
   */
  priority: string;

  /**
   * @generated from field: string subject = 6;
   */
  subject: string;

  /**
   * @generated from field: string message = 7;
   */
  message: string;

  /**
   * Optional: use template
   *
   * @generated from field: string template_id = 8;
   */
  templateId: string;

  /**
   * Common template data
   *
   * @generated from field: map<string, string> template_data = 9;
   */
  templateData: { [key: string]: string };

  /**
   * Per-recipient data
   *
   * @generated from field: repeated v1consortium.services.BulkNotificationRecipient recipients = 10;
   */
  recipients: BulkNotificationRecipient[];
};

/**
 * Describes the message v1consortium.services.SendBulkNotificationRequest.
 * Use `create(SendBulkNotificationRequestSchema)` to create a new message.
 */
export const SendBulkNotificationRequestSchema: GenMessage<SendBulkNotificationRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 24);

/**
 * @generated from message v1consortium.services.BulkNotificationRecipient
 */
export type BulkNotificationRecipient = Message<"v1consortium.services.BulkNotificationRecipient"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * User-specific template data
   *
   * @generated from field: map<string, string> template_data = 2;
   */
  templateData: { [key: string]: string };
};

/**
 * Describes the message v1consortium.services.BulkNotificationRecipient.
 * Use `create(BulkNotificationRecipientSchema)` to create a new message.
 */
export const BulkNotificationRecipientSchema: GenMessage<BulkNotificationRecipient> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 25);

/**
 * @generated from message v1consortium.services.SendBulkNotificationResponse
 */
export type SendBulkNotificationResponse = Message<"v1consortium.services.SendBulkNotificationResponse"> & {
  /**
   * @generated from field: int32 notifications_sent = 1;
   */
  notificationsSent: number;

  /**
   * @generated from field: int32 notifications_failed = 2;
   */
  notificationsFailed: number;

  /**
   * @generated from field: repeated string failed_user_ids = 3;
   */
  failedUserIds: string[];

  /**
   * @generated from field: string message = 4;
   */
  message: string;
};

/**
 * Describes the message v1consortium.services.SendBulkNotificationResponse.
 * Use `create(SendBulkNotificationResponseSchema)` to create a new message.
 */
export const SendBulkNotificationResponseSchema: GenMessage<SendBulkNotificationResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 26);

/**
 * Scheduled Notifications
 *
 * @generated from message v1consortium.services.ScheduleNotificationRequest
 */
export type ScheduleNotificationRequest = Message<"v1consortium.services.ScheduleNotificationRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * Optional: specific user
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * @generated from field: string notification_type = 3;
   */
  notificationType: string;

  /**
   * @generated from field: string channel = 4;
   */
  channel: string;

  /**
   * @generated from field: string priority = 5;
   */
  priority: string;

  /**
   * @generated from field: string subject = 6;
   */
  subject: string;

  /**
   * @generated from field: string message = 7;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Timestamp send_at = 8;
   */
  sendAt?: Timestamp;

  /**
   * Optional: "daily", "weekly", "monthly"
   *
   * @generated from field: string recurrence_pattern = 9;
   */
  recurrencePattern: string;

  /**
   * When to stop recurring
   *
   * @generated from field: google.protobuf.Timestamp recurrence_end = 10;
   */
  recurrenceEnd?: Timestamp;
};

/**
 * Describes the message v1consortium.services.ScheduleNotificationRequest.
 * Use `create(ScheduleNotificationRequestSchema)` to create a new message.
 */
export const ScheduleNotificationRequestSchema: GenMessage<ScheduleNotificationRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 27);

/**
 * @generated from message v1consortium.services.ScheduleNotificationResponse
 */
export type ScheduleNotificationResponse = Message<"v1consortium.services.ScheduleNotificationResponse"> & {
  /**
   * @generated from field: string scheduled_notification_id = 1;
   */
  scheduledNotificationId: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message v1consortium.services.ScheduleNotificationResponse.
 * Use `create(ScheduleNotificationResponseSchema)` to create a new message.
 */
export const ScheduleNotificationResponseSchema: GenMessage<ScheduleNotificationResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 28);

/**
 * @generated from message v1consortium.services.ListScheduledNotificationsRequest
 */
export type ListScheduledNotificationsRequest = Message<"v1consortium.services.ListScheduledNotificationsRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * Optional: filter by user
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * Show only pending notifications
   *
   * @generated from field: bool pending_only = 3;
   */
  pendingOnly: boolean;
};

/**
 * Describes the message v1consortium.services.ListScheduledNotificationsRequest.
 * Use `create(ListScheduledNotificationsRequestSchema)` to create a new message.
 */
export const ListScheduledNotificationsRequestSchema: GenMessage<ListScheduledNotificationsRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 29);

/**
 * @generated from message v1consortium.services.ScheduledNotification
 */
export type ScheduledNotification = Message<"v1consortium.services.ScheduledNotification"> & {
  /**
   * @generated from field: string scheduled_notification_id = 1;
   */
  scheduledNotificationId: string;

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * @generated from field: string user_id = 3;
   */
  userId: string;

  /**
   * @generated from field: string notification_type = 4;
   */
  notificationType: string;

  /**
   * @generated from field: string channel = 5;
   */
  channel: string;

  /**
   * @generated from field: string subject = 6;
   */
  subject: string;

  /**
   * @generated from field: string message = 7;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Timestamp send_at = 8;
   */
  sendAt?: Timestamp;

  /**
   * "pending", "sent", "failed", "cancelled"
   *
   * @generated from field: string status = 9;
   */
  status: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message v1consortium.services.ScheduledNotification.
 * Use `create(ScheduledNotificationSchema)` to create a new message.
 */
export const ScheduledNotificationSchema: GenMessage<ScheduledNotification> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 30);

/**
 * @generated from message v1consortium.services.ListScheduledNotificationsResponse
 */
export type ListScheduledNotificationsResponse = Message<"v1consortium.services.ListScheduledNotificationsResponse"> & {
  /**
   * @generated from field: repeated v1consortium.services.ScheduledNotification notifications = 1;
   */
  notifications: ScheduledNotification[];
};

/**
 * Describes the message v1consortium.services.ListScheduledNotificationsResponse.
 * Use `create(ListScheduledNotificationsResponseSchema)` to create a new message.
 */
export const ListScheduledNotificationsResponseSchema: GenMessage<ListScheduledNotificationsResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 31);

/**
 * @generated from message v1consortium.services.CancelScheduledNotificationRequest
 */
export type CancelScheduledNotificationRequest = Message<"v1consortium.services.CancelScheduledNotificationRequest"> & {
  /**
   * @generated from field: string scheduled_notification_id = 1;
   */
  scheduledNotificationId: string;

  /**
   * @generated from field: string cancelled_by = 2;
   */
  cancelledBy: string;
};

/**
 * Describes the message v1consortium.services.CancelScheduledNotificationRequest.
 * Use `create(CancelScheduledNotificationRequestSchema)` to create a new message.
 */
export const CancelScheduledNotificationRequestSchema: GenMessage<CancelScheduledNotificationRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 32);

/**
 * @generated from message v1consortium.services.CancelScheduledNotificationResponse
 */
export type CancelScheduledNotificationResponse = Message<"v1consortium.services.CancelScheduledNotificationResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message v1consortium.services.CancelScheduledNotificationResponse.
 * Use `create(CancelScheduledNotificationResponseSchema)` to create a new message.
 */
export const CancelScheduledNotificationResponseSchema: GenMessage<CancelScheduledNotificationResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 33);

/**
 * Notification Analytics
 *
 * @generated from message v1consortium.services.GetNotificationAnalyticsRequest
 */
export type GetNotificationAnalyticsRequest = Message<"v1consortium.services.GetNotificationAnalyticsRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_date = 2;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_date = 3;
   */
  endDate?: Timestamp;

  /**
   * Optional: filter by type
   *
   * @generated from field: string notification_type = 4;
   */
  notificationType: string;

  /**
   * Optional: filter by channel
   *
   * @generated from field: string channel = 5;
   */
  channel: string;
};

/**
 * Describes the message v1consortium.services.GetNotificationAnalyticsRequest.
 * Use `create(GetNotificationAnalyticsRequestSchema)` to create a new message.
 */
export const GetNotificationAnalyticsRequestSchema: GenMessage<GetNotificationAnalyticsRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 34);

/**
 * @generated from message v1consortium.services.NotificationMetrics
 */
export type NotificationMetrics = Message<"v1consortium.services.NotificationMetrics"> & {
  /**
   * @generated from field: int32 total_sent = 1;
   */
  totalSent: number;

  /**
   * @generated from field: int32 total_delivered = 2;
   */
  totalDelivered: number;

  /**
   * @generated from field: int32 total_failed = 3;
   */
  totalFailed: number;

  /**
   * @generated from field: int32 total_read = 4;
   */
  totalRead: number;

  /**
   * @generated from field: float delivery_rate = 5;
   */
  deliveryRate: number;

  /**
   * @generated from field: float read_rate = 6;
   */
  readRate: number;

  /**
   * channel -> count
   *
   * @generated from field: map<string, int32> by_channel = 7;
   */
  byChannel: { [key: string]: number };

  /**
   * type -> count
   *
   * @generated from field: map<string, int32> by_type = 8;
   */
  byType: { [key: string]: number };
};

/**
 * Describes the message v1consortium.services.NotificationMetrics.
 * Use `create(NotificationMetricsSchema)` to create a new message.
 */
export const NotificationMetricsSchema: GenMessage<NotificationMetrics> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 35);

/**
 * @generated from message v1consortium.services.GetNotificationAnalyticsResponse
 */
export type GetNotificationAnalyticsResponse = Message<"v1consortium.services.GetNotificationAnalyticsResponse"> & {
  /**
   * @generated from field: v1consortium.services.NotificationMetrics metrics = 1;
   */
  metrics?: NotificationMetrics;
};

/**
 * Describes the message v1consortium.services.GetNotificationAnalyticsResponse.
 * Use `create(GetNotificationAnalyticsResponseSchema)` to create a new message.
 */
export const GetNotificationAnalyticsResponseSchema: GenMessage<GetNotificationAnalyticsResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_notification, 36);

/**
 * Notification Service Definition
 *
 * @generated from service v1consortium.services.NotificationService
 */
export const NotificationService: GenService<{
  /**
   * Basic Notification Management
   *
   * @generated from rpc v1consortium.services.NotificationService.SendNotification
   */
  sendNotification: {
    methodKind: "unary";
    input: typeof SendNotificationRequestSchema;
    output: typeof SendNotificationResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.NotificationService.GetNotification
   */
  getNotification: {
    methodKind: "unary";
    input: typeof GetNotificationRequestSchema;
    output: typeof GetNotificationResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.NotificationService.ListNotifications
   */
  listNotifications: {
    methodKind: "unary";
    input: typeof ListNotificationsRequestSchema;
    output: typeof ListNotificationsResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.NotificationService.MarkNotificationRead
   */
  markNotificationRead: {
    methodKind: "unary";
    input: typeof MarkNotificationReadRequestSchema;
    output: typeof MarkNotificationReadResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.NotificationService.MarkAllNotificationsRead
   */
  markAllNotificationsRead: {
    methodKind: "unary";
    input: typeof MarkAllNotificationsReadRequestSchema;
    output: typeof MarkAllNotificationsReadResponseSchema;
  },
  /**
   * Template Management
   *
   * @generated from rpc v1consortium.services.NotificationService.CreateNotificationTemplate
   */
  createNotificationTemplate: {
    methodKind: "unary";
    input: typeof CreateNotificationTemplateRequestSchema;
    output: typeof CreateNotificationTemplateResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.NotificationService.GetNotificationTemplate
   */
  getNotificationTemplate: {
    methodKind: "unary";
    input: typeof GetNotificationTemplateRequestSchema;
    output: typeof GetNotificationTemplateResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.NotificationService.ListNotificationTemplates
   */
  listNotificationTemplates: {
    methodKind: "unary";
    input: typeof ListNotificationTemplatesRequestSchema;
    output: typeof ListNotificationTemplatesResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.NotificationService.UpdateNotificationTemplate
   */
  updateNotificationTemplate: {
    methodKind: "unary";
    input: typeof UpdateNotificationTemplateRequestSchema;
    output: typeof UpdateNotificationTemplateResponseSchema;
  },
  /**
   * Preference Management
   *
   * @generated from rpc v1consortium.services.NotificationService.GetNotificationPreferences
   */
  getNotificationPreferences: {
    methodKind: "unary";
    input: typeof GetNotificationPreferencesRequestSchema;
    output: typeof GetNotificationPreferencesResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.NotificationService.UpdateNotificationPreferences
   */
  updateNotificationPreferences: {
    methodKind: "unary";
    input: typeof UpdateNotificationPreferencesRequestSchema;
    output: typeof UpdateNotificationPreferencesResponseSchema;
  },
  /**
   * Bulk Operations
   *
   * @generated from rpc v1consortium.services.NotificationService.SendBulkNotification
   */
  sendBulkNotification: {
    methodKind: "unary";
    input: typeof SendBulkNotificationRequestSchema;
    output: typeof SendBulkNotificationResponseSchema;
  },
  /**
   * Scheduled Notifications
   *
   * @generated from rpc v1consortium.services.NotificationService.ScheduleNotification
   */
  scheduleNotification: {
    methodKind: "unary";
    input: typeof ScheduleNotificationRequestSchema;
    output: typeof ScheduleNotificationResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.NotificationService.ListScheduledNotifications
   */
  listScheduledNotifications: {
    methodKind: "unary";
    input: typeof ListScheduledNotificationsRequestSchema;
    output: typeof ListScheduledNotificationsResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.NotificationService.CancelScheduledNotification
   */
  cancelScheduledNotification: {
    methodKind: "unary";
    input: typeof CancelScheduledNotificationRequestSchema;
    output: typeof CancelScheduledNotificationResponseSchema;
  },
  /**
   * Analytics
   *
   * @generated from rpc v1consortium.services.NotificationService.GetNotificationAnalytics
   */
  getNotificationAnalytics: {
    methodKind: "unary";
    input: typeof GetNotificationAnalyticsRequestSchema;
    output: typeof GetNotificationAnalyticsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_services_v1_notification, 0);

