// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: services/v1/notification.proto

package v1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v1consortium_backend "v1consortium/api/pbentity"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Notification Management Messages
type SendNotificationRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId       string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserId               string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" Optional:"specific user, otherwise org-wide"`                                                        // Optional: specific user, otherwise org-wide
	NotificationType     string                 `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty" dc:"'test_reminder', 'certificate_expiring', 'violation_alert', etc."` // "test_reminder", "certificate_expiring", "violation_alert", etc.
	Channel              string                 `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty" dc:"'email', 'sms', 'in_app', 'phone'"`                                                                          // "email", "sms", "in_app", "phone"
	Priority             string                 `protobuf:"bytes,5,opt,name=priority,proto3" json:"priority,omitempty" dc:"'low', 'medium', 'high', 'urgent'"`                                                                        // "low", "medium", "high", "urgent"
	Subject              string                 `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	Message              string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	TemplateData         map[string]string      `protobuf:"bytes,8,rep,name=template_data,json=templateData,proto3" json:"template_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" dc:"Data for template rendering"` // Data for template rendering
	TemplateId           string                 `protobuf:"bytes,9,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty" Optional:"use predefined template"`                                                                               // Optional: use predefined template
	ScheduledFor         *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=scheduled_for,json=scheduledFor,proto3" json:"scheduled_for,omitempty" Optional:"schedule for future delivery"`                                                                   // Optional: schedule for future delivery
	AdditionalRecipients []string               `protobuf:"bytes,11,rep,name=additional_recipients,json=additionalRecipients,proto3" json:"additional_recipients,omitempty" dc:"Extra email addresses"`                                                        // Extra email addresses
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{0}
}

func (x *SendNotificationRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *SendNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendNotificationRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *SendNotificationRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *SendNotificationRequest) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *SendNotificationRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SendNotificationRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendNotificationRequest) GetTemplateData() map[string]string {
	if x != nil {
		return x.TemplateData
	}
	return nil
}

func (x *SendNotificationRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *SendNotificationRequest) GetScheduledFor() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledFor
	}
	return nil
}

func (x *SendNotificationRequest) GetAdditionalRecipients() []string {
	if x != nil {
		return x.AdditionalRecipients
	}
	return nil
}

type SendNotificationResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Notification  *v1consortium_backend.Notifications `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	Message       string                              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationResponse) Reset() {
	*x = SendNotificationResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationResponse) ProtoMessage() {}

func (x *SendNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{1}
}

func (x *SendNotificationResponse) GetNotification() *v1consortium_backend.Notifications {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *SendNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetNotificationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{2}
}

func (x *GetNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

type GetNotificationResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Notification  *v1consortium_backend.Notifications `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationResponse) Reset() {
	*x = GetNotificationResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationResponse) ProtoMessage() {}

func (x *GetNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{3}
}

func (x *GetNotificationResponse) GetNotification() *v1consortium_backend.Notifications {
	if x != nil {
		return x.Notification
	}
	return nil
}

type ListNotificationsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId   string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" Optional:"filter by user"`                               // Optional: filter by user
	NotificationType string                 `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty" Optional:"filter by type"` // Optional: filter by type
	Channel          string                 `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty" Optional:"filter by channel"`                                        // Optional: filter by channel
	Status           string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty" Optional:"filter by delivery status"`                                  // Optional: filter by delivery status
	Priority         string                 `protobuf:"bytes,6,opt,name=priority,proto3" json:"priority,omitempty" Optional:"filter by priority"`                                     // Optional: filter by priority
	StartDate        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	UnreadOnly       bool                   `protobuf:"varint,9,opt,name=unread_only,json=unreadOnly,proto3" json:"unread_only,omitempty" Optional:"show only unread notifications"` // Optional: show only unread notifications
	Page             int32                  `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"`
	PageSize         int32                  `protobuf:"varint,11,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListNotificationsRequest) Reset() {
	*x = ListNotificationsRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsRequest) ProtoMessage() {}

func (x *ListNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{4}
}

func (x *ListNotificationsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListNotificationsRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *ListNotificationsRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ListNotificationsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListNotificationsRequest) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *ListNotificationsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ListNotificationsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *ListNotificationsRequest) GetUnreadOnly() bool {
	if x != nil {
		return x.UnreadOnly
	}
	return false
}

func (x *ListNotificationsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListNotificationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListNotificationsResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Notifications []*v1consortium_backend.Notifications `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	TotalCount    int32                                 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	UnreadCount   int32                                 `protobuf:"varint,3,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	Page          int32                                 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                                 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsResponse) Reset() {
	*x = ListNotificationsResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsResponse) ProtoMessage() {}

func (x *ListNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{5}
}

func (x *ListNotificationsResponse) GetNotifications() []*v1consortium_backend.Notifications {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *ListNotificationsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListNotificationsResponse) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *ListNotificationsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListNotificationsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MarkNotificationReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	ReadBy         string                 `protobuf:"bytes,2,opt,name=read_by,json=readBy,proto3" json:"read_by,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkNotificationReadRequest) Reset() {
	*x = MarkNotificationReadRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkNotificationReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationReadRequest) ProtoMessage() {}

func (x *MarkNotificationReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationReadRequest.ProtoReflect.Descriptor instead.
func (*MarkNotificationReadRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{6}
}

func (x *MarkNotificationReadRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *MarkNotificationReadRequest) GetReadBy() string {
	if x != nil {
		return x.ReadBy
	}
	return ""
}

type MarkNotificationReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkNotificationReadResponse) Reset() {
	*x = MarkNotificationReadResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkNotificationReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationReadResponse) ProtoMessage() {}

func (x *MarkNotificationReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationReadResponse.ProtoReflect.Descriptor instead.
func (*MarkNotificationReadResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{7}
}

func (x *MarkNotificationReadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MarkAllNotificationsReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkAllNotificationsReadRequest) Reset() {
	*x = MarkAllNotificationsReadRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllNotificationsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllNotificationsReadRequest) ProtoMessage() {}

func (x *MarkAllNotificationsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllNotificationsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAllNotificationsReadRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{8}
}

func (x *MarkAllNotificationsReadRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *MarkAllNotificationsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MarkAllNotificationsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MarkedCount   int32                  `protobuf:"varint,1,opt,name=marked_count,json=markedCount,proto3" json:"marked_count,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllNotificationsReadResponse) Reset() {
	*x = MarkAllNotificationsReadResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllNotificationsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllNotificationsReadResponse) ProtoMessage() {}

func (x *MarkAllNotificationsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllNotificationsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAllNotificationsReadResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{9}
}

func (x *MarkAllNotificationsReadResponse) GetMarkedCount() int32 {
	if x != nil {
		return x.MarkedCount
	}
	return 0
}

func (x *MarkAllNotificationsReadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Notification Templates
type CreateNotificationTemplateRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId    string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	TemplateName      string                 `protobuf:"bytes,2,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	NotificationType  string                 `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	Channel           string                 `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	SubjectTemplate   string                 `protobuf:"bytes,5,opt,name=subject_template,json=subjectTemplate,proto3" json:"subject_template,omitempty"`
	BodyTemplate      string                 `protobuf:"bytes,6,opt,name=body_template,json=bodyTemplate,proto3" json:"body_template,omitempty"`
	RequiredVariables []string               `protobuf:"bytes,7,rep,name=required_variables,json=requiredVariables,proto3" json:"required_variables,omitempty" dc:"Variables that must be provided"` // Variables that must be provided
	IsSystemTemplate  bool                   `protobuf:"varint,8,opt,name=is_system_template,json=isSystemTemplate,proto3" json:"is_system_template,omitempty" dc:"System templates are read-only"`  // System templates are read-only
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateNotificationTemplateRequest) Reset() {
	*x = CreateNotificationTemplateRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationTemplateRequest) ProtoMessage() {}

func (x *CreateNotificationTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateNotificationTemplateRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{10}
}

func (x *CreateNotificationTemplateRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateNotificationTemplateRequest) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *CreateNotificationTemplateRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *CreateNotificationTemplateRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *CreateNotificationTemplateRequest) GetSubjectTemplate() string {
	if x != nil {
		return x.SubjectTemplate
	}
	return ""
}

func (x *CreateNotificationTemplateRequest) GetBodyTemplate() string {
	if x != nil {
		return x.BodyTemplate
	}
	return ""
}

func (x *CreateNotificationTemplateRequest) GetRequiredVariables() []string {
	if x != nil {
		return x.RequiredVariables
	}
	return nil
}

func (x *CreateNotificationTemplateRequest) GetIsSystemTemplate() bool {
	if x != nil {
		return x.IsSystemTemplate
	}
	return false
}

type CreateNotificationTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TemplateId    string                 `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationTemplateResponse) Reset() {
	*x = CreateNotificationTemplateResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationTemplateResponse) ProtoMessage() {}

func (x *CreateNotificationTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateNotificationTemplateResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{11}
}

func (x *CreateNotificationTemplateResponse) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *CreateNotificationTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetNotificationTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TemplateId    string                 `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationTemplateRequest) Reset() {
	*x = GetNotificationTemplateRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationTemplateRequest) ProtoMessage() {}

func (x *GetNotificationTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationTemplateRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{12}
}

func (x *GetNotificationTemplateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type NotificationTemplate struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TemplateId        string                 `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	OrganizationId    string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	TemplateName      string                 `protobuf:"bytes,3,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	NotificationType  string                 `protobuf:"bytes,4,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	Channel           string                 `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	SubjectTemplate   string                 `protobuf:"bytes,6,opt,name=subject_template,json=subjectTemplate,proto3" json:"subject_template,omitempty"`
	BodyTemplate      string                 `protobuf:"bytes,7,opt,name=body_template,json=bodyTemplate,proto3" json:"body_template,omitempty"`
	RequiredVariables []string               `protobuf:"bytes,8,rep,name=required_variables,json=requiredVariables,proto3" json:"required_variables,omitempty"`
	IsSystemTemplate  bool                   `protobuf:"varint,9,opt,name=is_system_template,json=isSystemTemplate,proto3" json:"is_system_template,omitempty"`
	IsActive          bool                   `protobuf:"varint,10,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NotificationTemplate) Reset() {
	*x = NotificationTemplate{}
	mi := &file_services_v1_notification_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationTemplate) ProtoMessage() {}

func (x *NotificationTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationTemplate.ProtoReflect.Descriptor instead.
func (*NotificationTemplate) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{13}
}

func (x *NotificationTemplate) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *NotificationTemplate) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *NotificationTemplate) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *NotificationTemplate) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *NotificationTemplate) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *NotificationTemplate) GetSubjectTemplate() string {
	if x != nil {
		return x.SubjectTemplate
	}
	return ""
}

func (x *NotificationTemplate) GetBodyTemplate() string {
	if x != nil {
		return x.BodyTemplate
	}
	return ""
}

func (x *NotificationTemplate) GetRequiredVariables() []string {
	if x != nil {
		return x.RequiredVariables
	}
	return nil
}

func (x *NotificationTemplate) GetIsSystemTemplate() bool {
	if x != nil {
		return x.IsSystemTemplate
	}
	return false
}

func (x *NotificationTemplate) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *NotificationTemplate) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NotificationTemplate) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetNotificationTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Template      *NotificationTemplate  `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationTemplateResponse) Reset() {
	*x = GetNotificationTemplateResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationTemplateResponse) ProtoMessage() {}

func (x *GetNotificationTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationTemplateResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{14}
}

func (x *GetNotificationTemplateResponse) GetTemplate() *NotificationTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type ListNotificationTemplatesRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId         string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	NotificationType       string                 `protobuf:"bytes,2,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty" Optional:"filter by type"`                               // Optional: filter by type
	Channel                string                 `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty" Optional:"filter by channel"`                                                                      // Optional: filter by channel
	IncludeSystemTemplates bool                   `protobuf:"varint,4,opt,name=include_system_templates,json=includeSystemTemplates,proto3" json:"include_system_templates,omitempty" dc:"Include system-wide templates"` // Include system-wide templates
	ActiveOnly             bool                   `protobuf:"varint,5,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListNotificationTemplatesRequest) Reset() {
	*x = ListNotificationTemplatesRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationTemplatesRequest) ProtoMessage() {}

func (x *ListNotificationTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{15}
}

func (x *ListNotificationTemplatesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListNotificationTemplatesRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *ListNotificationTemplatesRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ListNotificationTemplatesRequest) GetIncludeSystemTemplates() bool {
	if x != nil {
		return x.IncludeSystemTemplates
	}
	return false
}

func (x *ListNotificationTemplatesRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

type ListNotificationTemplatesResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Templates     []*NotificationTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationTemplatesResponse) Reset() {
	*x = ListNotificationTemplatesResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationTemplatesResponse) ProtoMessage() {}

func (x *ListNotificationTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{16}
}

func (x *ListNotificationTemplatesResponse) GetTemplates() []*NotificationTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

type UpdateNotificationTemplateRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TemplateId        string                 `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TemplateName      string                 `protobuf:"bytes,2,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	SubjectTemplate   string                 `protobuf:"bytes,3,opt,name=subject_template,json=subjectTemplate,proto3" json:"subject_template,omitempty"`
	BodyTemplate      string                 `protobuf:"bytes,4,opt,name=body_template,json=bodyTemplate,proto3" json:"body_template,omitempty"`
	RequiredVariables []string               `protobuf:"bytes,5,rep,name=required_variables,json=requiredVariables,proto3" json:"required_variables,omitempty"`
	IsActive          bool                   `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateNotificationTemplateRequest) Reset() {
	*x = UpdateNotificationTemplateRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationTemplateRequest) ProtoMessage() {}

func (x *UpdateNotificationTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotificationTemplateRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateNotificationTemplateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *UpdateNotificationTemplateRequest) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *UpdateNotificationTemplateRequest) GetSubjectTemplate() string {
	if x != nil {
		return x.SubjectTemplate
	}
	return ""
}

func (x *UpdateNotificationTemplateRequest) GetBodyTemplate() string {
	if x != nil {
		return x.BodyTemplate
	}
	return ""
}

func (x *UpdateNotificationTemplateRequest) GetRequiredVariables() []string {
	if x != nil {
		return x.RequiredVariables
	}
	return nil
}

func (x *UpdateNotificationTemplateRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type UpdateNotificationTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Template      *NotificationTemplate  `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotificationTemplateResponse) Reset() {
	*x = UpdateNotificationTemplateResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationTemplateResponse) ProtoMessage() {}

func (x *UpdateNotificationTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotificationTemplateResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateNotificationTemplateResponse) GetTemplate() *NotificationTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

// Notification Preferences
type GetNotificationPreferencesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationPreferencesRequest) Reset() {
	*x = GetNotificationPreferencesRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationPreferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationPreferencesRequest) ProtoMessage() {}

func (x *GetNotificationPreferencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationPreferencesRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationPreferencesRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{19}
}

func (x *GetNotificationPreferencesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type NotificationPreference struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NotificationType string                 `protobuf:"bytes,1,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	EmailEnabled     bool                   `protobuf:"varint,2,opt,name=email_enabled,json=emailEnabled,proto3" json:"email_enabled,omitempty"`
	SmsEnabled       bool                   `protobuf:"varint,3,opt,name=sms_enabled,json=smsEnabled,proto3" json:"sms_enabled,omitempty"`
	InAppEnabled     bool                   `protobuf:"varint,4,opt,name=in_app_enabled,json=inAppEnabled,proto3" json:"in_app_enabled,omitempty"`
	PhoneEnabled     bool                   `protobuf:"varint,5,opt,name=phone_enabled,json=phoneEnabled,proto3" json:"phone_enabled,omitempty"`
	Frequency        string                 `protobuf:"bytes,6,opt,name=frequency,proto3" json:"frequency,omitempty" dc:"'immediate', 'daily_digest', 'weekly_digest'"` // "immediate", "daily_digest", "weekly_digest"
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NotificationPreference) Reset() {
	*x = NotificationPreference{}
	mi := &file_services_v1_notification_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationPreference) ProtoMessage() {}

func (x *NotificationPreference) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationPreference.ProtoReflect.Descriptor instead.
func (*NotificationPreference) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{20}
}

func (x *NotificationPreference) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *NotificationPreference) GetEmailEnabled() bool {
	if x != nil {
		return x.EmailEnabled
	}
	return false
}

func (x *NotificationPreference) GetSmsEnabled() bool {
	if x != nil {
		return x.SmsEnabled
	}
	return false
}

func (x *NotificationPreference) GetInAppEnabled() bool {
	if x != nil {
		return x.InAppEnabled
	}
	return false
}

func (x *NotificationPreference) GetPhoneEnabled() bool {
	if x != nil {
		return x.PhoneEnabled
	}
	return false
}

func (x *NotificationPreference) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

type GetNotificationPreferencesResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Preferences   []*NotificationPreference `protobuf:"bytes,1,rep,name=preferences,proto3" json:"preferences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationPreferencesResponse) Reset() {
	*x = GetNotificationPreferencesResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationPreferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationPreferencesResponse) ProtoMessage() {}

func (x *GetNotificationPreferencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationPreferencesResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationPreferencesResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{21}
}

func (x *GetNotificationPreferencesResponse) GetPreferences() []*NotificationPreference {
	if x != nil {
		return x.Preferences
	}
	return nil
}

type UpdateNotificationPreferencesRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	UserId        string                    `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Preferences   []*NotificationPreference `protobuf:"bytes,2,rep,name=preferences,proto3" json:"preferences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotificationPreferencesRequest) Reset() {
	*x = UpdateNotificationPreferencesRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationPreferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationPreferencesRequest) ProtoMessage() {}

func (x *UpdateNotificationPreferencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationPreferencesRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotificationPreferencesRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateNotificationPreferencesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateNotificationPreferencesRequest) GetPreferences() []*NotificationPreference {
	if x != nil {
		return x.Preferences
	}
	return nil
}

type UpdateNotificationPreferencesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotificationPreferencesResponse) Reset() {
	*x = UpdateNotificationPreferencesResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationPreferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationPreferencesResponse) ProtoMessage() {}

func (x *UpdateNotificationPreferencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationPreferencesResponse.ProtoReflect.Descriptor instead.
func (*UpdateNotificationPreferencesResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateNotificationPreferencesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Bulk Notifications
type SendBulkNotificationRequest struct {
	state            protoimpl.MessageState       `protogen:"open.v1"`
	OrganizationId   string                       `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserIds          []string                     `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty" dc:"Target users"` // Target users
	NotificationType string                       `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	Channel          string                       `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	Priority         string                       `protobuf:"bytes,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Subject          string                       `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	Message          string                       `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	TemplateId       string                       `protobuf:"bytes,8,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty" Optional:"use template"`                                                                                   // Optional: use template
	TemplateData     map[string]string            `protobuf:"bytes,9,rep,name=template_data,json=templateData,proto3" json:"template_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" dc:"Common template data"` // Common template data
	Recipients       []*BulkNotificationRecipient `protobuf:"bytes,10,rep,name=recipients,proto3" json:"recipients,omitempty" dc:"Per-recipient data"`                                                                                                    // Per-recipient data
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SendBulkNotificationRequest) Reset() {
	*x = SendBulkNotificationRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendBulkNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBulkNotificationRequest) ProtoMessage() {}

func (x *SendBulkNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBulkNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendBulkNotificationRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{24}
}

func (x *SendBulkNotificationRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *SendBulkNotificationRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *SendBulkNotificationRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *SendBulkNotificationRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *SendBulkNotificationRequest) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *SendBulkNotificationRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SendBulkNotificationRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendBulkNotificationRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *SendBulkNotificationRequest) GetTemplateData() map[string]string {
	if x != nil {
		return x.TemplateData
	}
	return nil
}

func (x *SendBulkNotificationRequest) GetRecipients() []*BulkNotificationRecipient {
	if x != nil {
		return x.Recipients
	}
	return nil
}

type BulkNotificationRecipient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TemplateData  map[string]string      `protobuf:"bytes,2,rep,name=template_data,json=templateData,proto3" json:"template_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" dc:"User-specific template data"` // User-specific template data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkNotificationRecipient) Reset() {
	*x = BulkNotificationRecipient{}
	mi := &file_services_v1_notification_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkNotificationRecipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkNotificationRecipient) ProtoMessage() {}

func (x *BulkNotificationRecipient) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkNotificationRecipient.ProtoReflect.Descriptor instead.
func (*BulkNotificationRecipient) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{25}
}

func (x *BulkNotificationRecipient) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BulkNotificationRecipient) GetTemplateData() map[string]string {
	if x != nil {
		return x.TemplateData
	}
	return nil
}

type SendBulkNotificationResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	NotificationsSent   int32                  `protobuf:"varint,1,opt,name=notifications_sent,json=notificationsSent,proto3" json:"notifications_sent,omitempty"`
	NotificationsFailed int32                  `protobuf:"varint,2,opt,name=notifications_failed,json=notificationsFailed,proto3" json:"notifications_failed,omitempty"`
	FailedUserIds       []string               `protobuf:"bytes,3,rep,name=failed_user_ids,json=failedUserIds,proto3" json:"failed_user_ids,omitempty"`
	Message             string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SendBulkNotificationResponse) Reset() {
	*x = SendBulkNotificationResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendBulkNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBulkNotificationResponse) ProtoMessage() {}

func (x *SendBulkNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBulkNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendBulkNotificationResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{26}
}

func (x *SendBulkNotificationResponse) GetNotificationsSent() int32 {
	if x != nil {
		return x.NotificationsSent
	}
	return 0
}

func (x *SendBulkNotificationResponse) GetNotificationsFailed() int32 {
	if x != nil {
		return x.NotificationsFailed
	}
	return 0
}

func (x *SendBulkNotificationResponse) GetFailedUserIds() []string {
	if x != nil {
		return x.FailedUserIds
	}
	return nil
}

func (x *SendBulkNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Scheduled Notifications
type ScheduleNotificationRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId    string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserId            string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" Optional:"specific user"` // Optional: specific user
	NotificationType  string                 `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	Channel           string                 `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	Priority          string                 `protobuf:"bytes,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Subject           string                 `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	Message           string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	SendAt            *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=send_at,json=sendAt,proto3" json:"send_at,omitempty"`
	RecurrencePattern string                 `protobuf:"bytes,9,opt,name=recurrence_pattern,json=recurrencePattern,proto3" json:"recurrence_pattern,omitempty" Optional:"\"daily\", \"weekly\", \"monthly\""` // Optional: "daily", "weekly", "monthly"
	RecurrenceEnd     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=recurrence_end,json=recurrenceEnd,proto3" json:"recurrence_end,omitempty" dc:"When to stop recurring"`                              // When to stop recurring
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ScheduleNotificationRequest) Reset() {
	*x = ScheduleNotificationRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleNotificationRequest) ProtoMessage() {}

func (x *ScheduleNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleNotificationRequest.ProtoReflect.Descriptor instead.
func (*ScheduleNotificationRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{27}
}

func (x *ScheduleNotificationRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetSendAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SendAt
	}
	return nil
}

func (x *ScheduleNotificationRequest) GetRecurrencePattern() string {
	if x != nil {
		return x.RecurrencePattern
	}
	return ""
}

func (x *ScheduleNotificationRequest) GetRecurrenceEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.RecurrenceEnd
	}
	return nil
}

type ScheduleNotificationResponse struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	ScheduledNotificationId string                 `protobuf:"bytes,1,opt,name=scheduled_notification_id,json=scheduledNotificationId,proto3" json:"scheduled_notification_id,omitempty"`
	Message                 string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ScheduleNotificationResponse) Reset() {
	*x = ScheduleNotificationResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleNotificationResponse) ProtoMessage() {}

func (x *ScheduleNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleNotificationResponse.ProtoReflect.Descriptor instead.
func (*ScheduleNotificationResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{28}
}

func (x *ScheduleNotificationResponse) GetScheduledNotificationId() string {
	if x != nil {
		return x.ScheduledNotificationId
	}
	return ""
}

func (x *ScheduleNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListScheduledNotificationsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" Optional:"filter by user"`                            // Optional: filter by user
	PendingOnly    bool                   `protobuf:"varint,3,opt,name=pending_only,json=pendingOnly,proto3" json:"pending_only,omitempty" dc:"Show only pending notifications"` // Show only pending notifications
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListScheduledNotificationsRequest) Reset() {
	*x = ListScheduledNotificationsRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScheduledNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScheduledNotificationsRequest) ProtoMessage() {}

func (x *ListScheduledNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScheduledNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListScheduledNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{29}
}

func (x *ListScheduledNotificationsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListScheduledNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListScheduledNotificationsRequest) GetPendingOnly() bool {
	if x != nil {
		return x.PendingOnly
	}
	return false
}

type ScheduledNotification struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	ScheduledNotificationId string                 `protobuf:"bytes,1,opt,name=scheduled_notification_id,json=scheduledNotificationId,proto3" json:"scheduled_notification_id,omitempty"`
	OrganizationId          string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	UserId                  string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotificationType        string                 `protobuf:"bytes,4,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	Channel                 string                 `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Subject                 string                 `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	Message                 string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	SendAt                  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=send_at,json=sendAt,proto3" json:"send_at,omitempty"`
	Status                  string                 `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty" dc:"'pending', 'sent', 'failed', 'cancelled'"` // "pending", "sent", "failed", "cancelled"
	CreatedAt               *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ScheduledNotification) Reset() {
	*x = ScheduledNotification{}
	mi := &file_services_v1_notification_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduledNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledNotification) ProtoMessage() {}

func (x *ScheduledNotification) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledNotification.ProtoReflect.Descriptor instead.
func (*ScheduledNotification) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{30}
}

func (x *ScheduledNotification) GetScheduledNotificationId() string {
	if x != nil {
		return x.ScheduledNotificationId
	}
	return ""
}

func (x *ScheduledNotification) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ScheduledNotification) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ScheduledNotification) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *ScheduledNotification) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ScheduledNotification) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ScheduledNotification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ScheduledNotification) GetSendAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SendAt
	}
	return nil
}

func (x *ScheduledNotification) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ScheduledNotification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ListScheduledNotificationsResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Notifications []*ScheduledNotification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScheduledNotificationsResponse) Reset() {
	*x = ListScheduledNotificationsResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScheduledNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScheduledNotificationsResponse) ProtoMessage() {}

func (x *ListScheduledNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScheduledNotificationsResponse.ProtoReflect.Descriptor instead.
func (*ListScheduledNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{31}
}

func (x *ListScheduledNotificationsResponse) GetNotifications() []*ScheduledNotification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type CancelScheduledNotificationRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	ScheduledNotificationId string                 `protobuf:"bytes,1,opt,name=scheduled_notification_id,json=scheduledNotificationId,proto3" json:"scheduled_notification_id,omitempty"`
	CancelledBy             string                 `protobuf:"bytes,2,opt,name=cancelled_by,json=cancelledBy,proto3" json:"cancelled_by,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CancelScheduledNotificationRequest) Reset() {
	*x = CancelScheduledNotificationRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelScheduledNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelScheduledNotificationRequest) ProtoMessage() {}

func (x *CancelScheduledNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelScheduledNotificationRequest.ProtoReflect.Descriptor instead.
func (*CancelScheduledNotificationRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{32}
}

func (x *CancelScheduledNotificationRequest) GetScheduledNotificationId() string {
	if x != nil {
		return x.ScheduledNotificationId
	}
	return ""
}

func (x *CancelScheduledNotificationRequest) GetCancelledBy() string {
	if x != nil {
		return x.CancelledBy
	}
	return ""
}

type CancelScheduledNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelScheduledNotificationResponse) Reset() {
	*x = CancelScheduledNotificationResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelScheduledNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelScheduledNotificationResponse) ProtoMessage() {}

func (x *CancelScheduledNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelScheduledNotificationResponse.ProtoReflect.Descriptor instead.
func (*CancelScheduledNotificationResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{33}
}

func (x *CancelScheduledNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Notification Analytics
type GetNotificationAnalyticsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId   string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	StartDate        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	NotificationType string                 `protobuf:"bytes,4,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty" Optional:"filter by type"` // Optional: filter by type
	Channel          string                 `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty" Optional:"filter by channel"`                                        // Optional: filter by channel
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetNotificationAnalyticsRequest) Reset() {
	*x = GetNotificationAnalyticsRequest{}
	mi := &file_services_v1_notification_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationAnalyticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationAnalyticsRequest) ProtoMessage() {}

func (x *GetNotificationAnalyticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationAnalyticsRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationAnalyticsRequest) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{34}
}

func (x *GetNotificationAnalyticsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *GetNotificationAnalyticsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetNotificationAnalyticsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetNotificationAnalyticsRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *GetNotificationAnalyticsRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

type NotificationMetrics struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalSent      int32                  `protobuf:"varint,1,opt,name=total_sent,json=totalSent,proto3" json:"total_sent,omitempty"`
	TotalDelivered int32                  `protobuf:"varint,2,opt,name=total_delivered,json=totalDelivered,proto3" json:"total_delivered,omitempty"`
	TotalFailed    int32                  `protobuf:"varint,3,opt,name=total_failed,json=totalFailed,proto3" json:"total_failed,omitempty"`
	TotalRead      int32                  `protobuf:"varint,4,opt,name=total_read,json=totalRead,proto3" json:"total_read,omitempty"`
	DeliveryRate   float32                `protobuf:"fixed32,5,opt,name=delivery_rate,json=deliveryRate,proto3" json:"delivery_rate,omitempty"`
	ReadRate       float32                `protobuf:"fixed32,6,opt,name=read_rate,json=readRate,proto3" json:"read_rate,omitempty"`
	ByChannel      map[string]int32       `protobuf:"bytes,7,rep,name=by_channel,json=byChannel,proto3" json:"by_channel,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value" dc:"channel -> count"` // channel -> count
	ByType         map[string]int32       `protobuf:"bytes,8,rep,name=by_type,json=byType,proto3" json:"by_type,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value" dc:"type -> count"`             // type -> count
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NotificationMetrics) Reset() {
	*x = NotificationMetrics{}
	mi := &file_services_v1_notification_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationMetrics) ProtoMessage() {}

func (x *NotificationMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationMetrics.ProtoReflect.Descriptor instead.
func (*NotificationMetrics) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{35}
}

func (x *NotificationMetrics) GetTotalSent() int32 {
	if x != nil {
		return x.TotalSent
	}
	return 0
}

func (x *NotificationMetrics) GetTotalDelivered() int32 {
	if x != nil {
		return x.TotalDelivered
	}
	return 0
}

func (x *NotificationMetrics) GetTotalFailed() int32 {
	if x != nil {
		return x.TotalFailed
	}
	return 0
}

func (x *NotificationMetrics) GetTotalRead() int32 {
	if x != nil {
		return x.TotalRead
	}
	return 0
}

func (x *NotificationMetrics) GetDeliveryRate() float32 {
	if x != nil {
		return x.DeliveryRate
	}
	return 0
}

func (x *NotificationMetrics) GetReadRate() float32 {
	if x != nil {
		return x.ReadRate
	}
	return 0
}

func (x *NotificationMetrics) GetByChannel() map[string]int32 {
	if x != nil {
		return x.ByChannel
	}
	return nil
}

func (x *NotificationMetrics) GetByType() map[string]int32 {
	if x != nil {
		return x.ByType
	}
	return nil
}

type GetNotificationAnalyticsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       *NotificationMetrics   `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationAnalyticsResponse) Reset() {
	*x = GetNotificationAnalyticsResponse{}
	mi := &file_services_v1_notification_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationAnalyticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationAnalyticsResponse) ProtoMessage() {}

func (x *GetNotificationAnalyticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_v1_notification_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationAnalyticsResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationAnalyticsResponse) Descriptor() ([]byte, []int) {
	return file_services_v1_notification_proto_rawDescGZIP(), []int{36}
}

func (x *GetNotificationAnalyticsResponse) GetMetrics() *NotificationMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_services_v1_notification_proto protoreflect.FileDescriptor

const file_services_v1_notification_proto_rawDesc = "" +
	"\n" +
	"\x1eservices/v1/notification.proto\x12\x15v1consortium.services\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cpbentity/notifications.proto\"\xb1\x04\n" +
	"\x17SendNotificationRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12+\n" +
	"\x11notification_type\x18\x03 \x01(\tR\x10notificationType\x12\x18\n" +
	"\achannel\x18\x04 \x01(\tR\achannel\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\tR\bpriority\x12\x18\n" +
	"\asubject\x18\x06 \x01(\tR\asubject\x12\x18\n" +
	"\amessage\x18\a \x01(\tR\amessage\x12e\n" +
	"\rtemplate_data\x18\b \x03(\v2@.v1consortium.services.SendNotificationRequest.TemplateDataEntryR\ftemplateData\x12\x1f\n" +
	"\vtemplate_id\x18\t \x01(\tR\n" +
	"templateId\x12?\n" +
	"\rscheduled_for\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\fscheduledFor\x123\n" +
	"\x15additional_recipients\x18\v \x03(\tR\x14additionalRecipients\x1a?\n" +
	"\x11TemplateDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"}\n" +
	"\x18SendNotificationResponse\x12G\n" +
	"\fnotification\x18\x01 \x01(\v2#.v1consortium.backend.NotificationsR\fnotification\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"A\n" +
	"\x16GetNotificationRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\"b\n" +
	"\x17GetNotificationResponse\x12G\n" +
	"\fnotification\x18\x01 \x01(\v2#.v1consortium.backend.NotificationsR\fnotification\"\x9b\x03\n" +
	"\x18ListNotificationsRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12+\n" +
	"\x11notification_type\x18\x03 \x01(\tR\x10notificationType\x12\x18\n" +
	"\achannel\x18\x04 \x01(\tR\achannel\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\tR\bpriority\x129\n" +
	"\n" +
	"start_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x1f\n" +
	"\vunread_only\x18\t \x01(\bR\n" +
	"unreadOnly\x12\x12\n" +
	"\x04page\x18\n" +
	" \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\v \x01(\x05R\bpageSize\"\xdb\x01\n" +
	"\x19ListNotificationsResponse\x12I\n" +
	"\rnotifications\x18\x01 \x03(\v2#.v1consortium.backend.NotificationsR\rnotifications\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12!\n" +
	"\funread_count\x18\x03 \x01(\x05R\vunreadCount\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"_\n" +
	"\x1bMarkNotificationReadRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x17\n" +
	"\aread_by\x18\x02 \x01(\tR\x06readBy\"8\n" +
	"\x1cMarkNotificationReadResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"c\n" +
	"\x1fMarkAllNotificationsReadRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"_\n" +
	" MarkAllNotificationsReadResponse\x12!\n" +
	"\fmarked_count\x18\x01 \x01(\x05R\vmarkedCount\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xe5\x02\n" +
	"!CreateNotificationTemplateRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12#\n" +
	"\rtemplate_name\x18\x02 \x01(\tR\ftemplateName\x12+\n" +
	"\x11notification_type\x18\x03 \x01(\tR\x10notificationType\x12\x18\n" +
	"\achannel\x18\x04 \x01(\tR\achannel\x12)\n" +
	"\x10subject_template\x18\x05 \x01(\tR\x0fsubjectTemplate\x12#\n" +
	"\rbody_template\x18\x06 \x01(\tR\fbodyTemplate\x12-\n" +
	"\x12required_variables\x18\a \x03(\tR\x11requiredVariables\x12,\n" +
	"\x12is_system_template\x18\b \x01(\bR\x10isSystemTemplate\"_\n" +
	"\"CreateNotificationTemplateResponse\x12\x1f\n" +
	"\vtemplate_id\x18\x01 \x01(\tR\n" +
	"templateId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"A\n" +
	"\x1eGetNotificationTemplateRequest\x12\x1f\n" +
	"\vtemplate_id\x18\x01 \x01(\tR\n" +
	"templateId\"\x8c\x04\n" +
	"\x14NotificationTemplate\x12\x1f\n" +
	"\vtemplate_id\x18\x01 \x01(\tR\n" +
	"templateId\x12'\n" +
	"\x0forganization_id\x18\x02 \x01(\tR\x0eorganizationId\x12#\n" +
	"\rtemplate_name\x18\x03 \x01(\tR\ftemplateName\x12+\n" +
	"\x11notification_type\x18\x04 \x01(\tR\x10notificationType\x12\x18\n" +
	"\achannel\x18\x05 \x01(\tR\achannel\x12)\n" +
	"\x10subject_template\x18\x06 \x01(\tR\x0fsubjectTemplate\x12#\n" +
	"\rbody_template\x18\a \x01(\tR\fbodyTemplate\x12-\n" +
	"\x12required_variables\x18\b \x03(\tR\x11requiredVariables\x12,\n" +
	"\x12is_system_template\x18\t \x01(\bR\x10isSystemTemplate\x12\x1b\n" +
	"\tis_active\x18\n" +
	" \x01(\bR\bisActive\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"j\n" +
	"\x1fGetNotificationTemplateResponse\x12G\n" +
	"\btemplate\x18\x01 \x01(\v2+.v1consortium.services.NotificationTemplateR\btemplate\"\xed\x01\n" +
	" ListNotificationTemplatesRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12+\n" +
	"\x11notification_type\x18\x02 \x01(\tR\x10notificationType\x12\x18\n" +
	"\achannel\x18\x03 \x01(\tR\achannel\x128\n" +
	"\x18include_system_templates\x18\x04 \x01(\bR\x16includeSystemTemplates\x12\x1f\n" +
	"\vactive_only\x18\x05 \x01(\bR\n" +
	"activeOnly\"n\n" +
	"!ListNotificationTemplatesResponse\x12I\n" +
	"\ttemplates\x18\x01 \x03(\v2+.v1consortium.services.NotificationTemplateR\ttemplates\"\x85\x02\n" +
	"!UpdateNotificationTemplateRequest\x12\x1f\n" +
	"\vtemplate_id\x18\x01 \x01(\tR\n" +
	"templateId\x12#\n" +
	"\rtemplate_name\x18\x02 \x01(\tR\ftemplateName\x12)\n" +
	"\x10subject_template\x18\x03 \x01(\tR\x0fsubjectTemplate\x12#\n" +
	"\rbody_template\x18\x04 \x01(\tR\fbodyTemplate\x12-\n" +
	"\x12required_variables\x18\x05 \x03(\tR\x11requiredVariables\x12\x1b\n" +
	"\tis_active\x18\x06 \x01(\bR\bisActive\"m\n" +
	"\"UpdateNotificationTemplateResponse\x12G\n" +
	"\btemplate\x18\x01 \x01(\v2+.v1consortium.services.NotificationTemplateR\btemplate\"<\n" +
	"!GetNotificationPreferencesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"\xf4\x01\n" +
	"\x16NotificationPreference\x12+\n" +
	"\x11notification_type\x18\x01 \x01(\tR\x10notificationType\x12#\n" +
	"\remail_enabled\x18\x02 \x01(\bR\femailEnabled\x12\x1f\n" +
	"\vsms_enabled\x18\x03 \x01(\bR\n" +
	"smsEnabled\x12$\n" +
	"\x0ein_app_enabled\x18\x04 \x01(\bR\finAppEnabled\x12#\n" +
	"\rphone_enabled\x18\x05 \x01(\bR\fphoneEnabled\x12\x1c\n" +
	"\tfrequency\x18\x06 \x01(\tR\tfrequency\"u\n" +
	"\"GetNotificationPreferencesResponse\x12O\n" +
	"\vpreferences\x18\x01 \x03(\v2-.v1consortium.services.NotificationPreferenceR\vpreferences\"\x90\x01\n" +
	"$UpdateNotificationPreferencesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12O\n" +
	"\vpreferences\x18\x02 \x03(\v2-.v1consortium.services.NotificationPreferenceR\vpreferences\"A\n" +
	"%UpdateNotificationPreferencesResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x97\x04\n" +
	"\x1bSendBulkNotificationRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12\x19\n" +
	"\buser_ids\x18\x02 \x03(\tR\auserIds\x12+\n" +
	"\x11notification_type\x18\x03 \x01(\tR\x10notificationType\x12\x18\n" +
	"\achannel\x18\x04 \x01(\tR\achannel\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\tR\bpriority\x12\x18\n" +
	"\asubject\x18\x06 \x01(\tR\asubject\x12\x18\n" +
	"\amessage\x18\a \x01(\tR\amessage\x12\x1f\n" +
	"\vtemplate_id\x18\b \x01(\tR\n" +
	"templateId\x12i\n" +
	"\rtemplate_data\x18\t \x03(\v2D.v1consortium.services.SendBulkNotificationRequest.TemplateDataEntryR\ftemplateData\x12P\n" +
	"\n" +
	"recipients\x18\n" +
	" \x03(\v20.v1consortium.services.BulkNotificationRecipientR\n" +
	"recipients\x1a?\n" +
	"\x11TemplateDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xde\x01\n" +
	"\x19BulkNotificationRecipient\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12g\n" +
	"\rtemplate_data\x18\x02 \x03(\v2B.v1consortium.services.BulkNotificationRecipient.TemplateDataEntryR\ftemplateData\x1a?\n" +
	"\x11TemplateDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc2\x01\n" +
	"\x1cSendBulkNotificationResponse\x12-\n" +
	"\x12notifications_sent\x18\x01 \x01(\x05R\x11notificationsSent\x121\n" +
	"\x14notifications_failed\x18\x02 \x01(\x05R\x13notificationsFailed\x12&\n" +
	"\x0ffailed_user_ids\x18\x03 \x03(\tR\rfailedUserIds\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\x9d\x03\n" +
	"\x1bScheduleNotificationRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12+\n" +
	"\x11notification_type\x18\x03 \x01(\tR\x10notificationType\x12\x18\n" +
	"\achannel\x18\x04 \x01(\tR\achannel\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\tR\bpriority\x12\x18\n" +
	"\asubject\x18\x06 \x01(\tR\asubject\x12\x18\n" +
	"\amessage\x18\a \x01(\tR\amessage\x123\n" +
	"\asend_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x06sendAt\x12-\n" +
	"\x12recurrence_pattern\x18\t \x01(\tR\x11recurrencePattern\x12A\n" +
	"\x0erecurrence_end\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\rrecurrenceEnd\"t\n" +
	"\x1cScheduleNotificationResponse\x12:\n" +
	"\x19scheduled_notification_id\x18\x01 \x01(\tR\x17scheduledNotificationId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x88\x01\n" +
	"!ListScheduledNotificationsRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12!\n" +
	"\fpending_only\x18\x03 \x01(\bR\vpendingOnly\"\x98\x03\n" +
	"\x15ScheduledNotification\x12:\n" +
	"\x19scheduled_notification_id\x18\x01 \x01(\tR\x17scheduledNotificationId\x12'\n" +
	"\x0forganization_id\x18\x02 \x01(\tR\x0eorganizationId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12+\n" +
	"\x11notification_type\x18\x04 \x01(\tR\x10notificationType\x12\x18\n" +
	"\achannel\x18\x05 \x01(\tR\achannel\x12\x18\n" +
	"\asubject\x18\x06 \x01(\tR\asubject\x12\x18\n" +
	"\amessage\x18\a \x01(\tR\amessage\x123\n" +
	"\asend_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x06sendAt\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"x\n" +
	"\"ListScheduledNotificationsResponse\x12R\n" +
	"\rnotifications\x18\x01 \x03(\v2,.v1consortium.services.ScheduledNotificationR\rnotifications\"\x83\x01\n" +
	"\"CancelScheduledNotificationRequest\x12:\n" +
	"\x19scheduled_notification_id\x18\x01 \x01(\tR\x17scheduledNotificationId\x12!\n" +
	"\fcancelled_by\x18\x02 \x01(\tR\vcancelledBy\"?\n" +
	"#CancelScheduledNotificationResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x83\x02\n" +
	"\x1fGetNotificationAnalyticsRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x129\n" +
	"\n" +
	"start_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12+\n" +
	"\x11notification_type\x18\x04 \x01(\tR\x10notificationType\x12\x18\n" +
	"\achannel\x18\x05 \x01(\tR\achannel\"\x85\x04\n" +
	"\x13NotificationMetrics\x12\x1d\n" +
	"\n" +
	"total_sent\x18\x01 \x01(\x05R\ttotalSent\x12'\n" +
	"\x0ftotal_delivered\x18\x02 \x01(\x05R\x0etotalDelivered\x12!\n" +
	"\ftotal_failed\x18\x03 \x01(\x05R\vtotalFailed\x12\x1d\n" +
	"\n" +
	"total_read\x18\x04 \x01(\x05R\ttotalRead\x12#\n" +
	"\rdelivery_rate\x18\x05 \x01(\x02R\fdeliveryRate\x12\x1b\n" +
	"\tread_rate\x18\x06 \x01(\x02R\breadRate\x12X\n" +
	"\n" +
	"by_channel\x18\a \x03(\v29.v1consortium.services.NotificationMetrics.ByChannelEntryR\tbyChannel\x12O\n" +
	"\aby_type\x18\b \x03(\v26.v1consortium.services.NotificationMetrics.ByTypeEntryR\x06byType\x1a<\n" +
	"\x0eByChannelEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a9\n" +
	"\vByTypeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"h\n" +
	" GetNotificationAnalyticsResponse\x12D\n" +
	"\ametrics\x18\x01 \x01(\v2*.v1consortium.services.NotificationMetricsR\ametrics2\xb3\x11\n" +
	"\x13NotificationService\x12s\n" +
	"\x10SendNotification\x12..v1consortium.services.SendNotificationRequest\x1a/.v1consortium.services.SendNotificationResponse\x12p\n" +
	"\x0fGetNotification\x12-.v1consortium.services.GetNotificationRequest\x1a..v1consortium.services.GetNotificationResponse\x12v\n" +
	"\x11ListNotifications\x12/.v1consortium.services.ListNotificationsRequest\x1a0.v1consortium.services.ListNotificationsResponse\x12\x7f\n" +
	"\x14MarkNotificationRead\x122.v1consortium.services.MarkNotificationReadRequest\x1a3.v1consortium.services.MarkNotificationReadResponse\x12\x8b\x01\n" +
	"\x18MarkAllNotificationsRead\x126.v1consortium.services.MarkAllNotificationsReadRequest\x1a7.v1consortium.services.MarkAllNotificationsReadResponse\x12\x91\x01\n" +
	"\x1aCreateNotificationTemplate\x128.v1consortium.services.CreateNotificationTemplateRequest\x1a9.v1consortium.services.CreateNotificationTemplateResponse\x12\x88\x01\n" +
	"\x17GetNotificationTemplate\x125.v1consortium.services.GetNotificationTemplateRequest\x1a6.v1consortium.services.GetNotificationTemplateResponse\x12\x8e\x01\n" +
	"\x19ListNotificationTemplates\x127.v1consortium.services.ListNotificationTemplatesRequest\x1a8.v1consortium.services.ListNotificationTemplatesResponse\x12\x91\x01\n" +
	"\x1aUpdateNotificationTemplate\x128.v1consortium.services.UpdateNotificationTemplateRequest\x1a9.v1consortium.services.UpdateNotificationTemplateResponse\x12\x91\x01\n" +
	"\x1aGetNotificationPreferences\x128.v1consortium.services.GetNotificationPreferencesRequest\x1a9.v1consortium.services.GetNotificationPreferencesResponse\x12\x9a\x01\n" +
	"\x1dUpdateNotificationPreferences\x12;.v1consortium.services.UpdateNotificationPreferencesRequest\x1a<.v1consortium.services.UpdateNotificationPreferencesResponse\x12\x7f\n" +
	"\x14SendBulkNotification\x122.v1consortium.services.SendBulkNotificationRequest\x1a3.v1consortium.services.SendBulkNotificationResponse\x12\x7f\n" +
	"\x14ScheduleNotification\x122.v1consortium.services.ScheduleNotificationRequest\x1a3.v1consortium.services.ScheduleNotificationResponse\x12\x91\x01\n" +
	"\x1aListScheduledNotifications\x128.v1consortium.services.ListScheduledNotificationsRequest\x1a9.v1consortium.services.ListScheduledNotificationsResponse\x12\x94\x01\n" +
	"\x1bCancelScheduledNotification\x129.v1consortium.services.CancelScheduledNotificationRequest\x1a:.v1consortium.services.CancelScheduledNotificationResponse\x12\x8b\x01\n" +
	"\x18GetNotificationAnalytics\x126.v1consortium.services.GetNotificationAnalyticsRequest\x1a7.v1consortium.services.GetNotificationAnalyticsResponseB\rZ\vservices/v1b\x06proto3"

var (
	file_services_v1_notification_proto_rawDescOnce sync.Once
	file_services_v1_notification_proto_rawDescData []byte
)

func file_services_v1_notification_proto_rawDescGZIP() []byte {
	file_services_v1_notification_proto_rawDescOnce.Do(func() {
		file_services_v1_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_services_v1_notification_proto_rawDesc), len(file_services_v1_notification_proto_rawDesc)))
	})
	return file_services_v1_notification_proto_rawDescData
}

var file_services_v1_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_services_v1_notification_proto_goTypes = []any{
	(*SendNotificationRequest)(nil),               // 0: v1consortium.services.SendNotificationRequest
	(*SendNotificationResponse)(nil),              // 1: v1consortium.services.SendNotificationResponse
	(*GetNotificationRequest)(nil),                // 2: v1consortium.services.GetNotificationRequest
	(*GetNotificationResponse)(nil),               // 3: v1consortium.services.GetNotificationResponse
	(*ListNotificationsRequest)(nil),              // 4: v1consortium.services.ListNotificationsRequest
	(*ListNotificationsResponse)(nil),             // 5: v1consortium.services.ListNotificationsResponse
	(*MarkNotificationReadRequest)(nil),           // 6: v1consortium.services.MarkNotificationReadRequest
	(*MarkNotificationReadResponse)(nil),          // 7: v1consortium.services.MarkNotificationReadResponse
	(*MarkAllNotificationsReadRequest)(nil),       // 8: v1consortium.services.MarkAllNotificationsReadRequest
	(*MarkAllNotificationsReadResponse)(nil),      // 9: v1consortium.services.MarkAllNotificationsReadResponse
	(*CreateNotificationTemplateRequest)(nil),     // 10: v1consortium.services.CreateNotificationTemplateRequest
	(*CreateNotificationTemplateResponse)(nil),    // 11: v1consortium.services.CreateNotificationTemplateResponse
	(*GetNotificationTemplateRequest)(nil),        // 12: v1consortium.services.GetNotificationTemplateRequest
	(*NotificationTemplate)(nil),                  // 13: v1consortium.services.NotificationTemplate
	(*GetNotificationTemplateResponse)(nil),       // 14: v1consortium.services.GetNotificationTemplateResponse
	(*ListNotificationTemplatesRequest)(nil),      // 15: v1consortium.services.ListNotificationTemplatesRequest
	(*ListNotificationTemplatesResponse)(nil),     // 16: v1consortium.services.ListNotificationTemplatesResponse
	(*UpdateNotificationTemplateRequest)(nil),     // 17: v1consortium.services.UpdateNotificationTemplateRequest
	(*UpdateNotificationTemplateResponse)(nil),    // 18: v1consortium.services.UpdateNotificationTemplateResponse
	(*GetNotificationPreferencesRequest)(nil),     // 19: v1consortium.services.GetNotificationPreferencesRequest
	(*NotificationPreference)(nil),                // 20: v1consortium.services.NotificationPreference
	(*GetNotificationPreferencesResponse)(nil),    // 21: v1consortium.services.GetNotificationPreferencesResponse
	(*UpdateNotificationPreferencesRequest)(nil),  // 22: v1consortium.services.UpdateNotificationPreferencesRequest
	(*UpdateNotificationPreferencesResponse)(nil), // 23: v1consortium.services.UpdateNotificationPreferencesResponse
	(*SendBulkNotificationRequest)(nil),           // 24: v1consortium.services.SendBulkNotificationRequest
	(*BulkNotificationRecipient)(nil),             // 25: v1consortium.services.BulkNotificationRecipient
	(*SendBulkNotificationResponse)(nil),          // 26: v1consortium.services.SendBulkNotificationResponse
	(*ScheduleNotificationRequest)(nil),           // 27: v1consortium.services.ScheduleNotificationRequest
	(*ScheduleNotificationResponse)(nil),          // 28: v1consortium.services.ScheduleNotificationResponse
	(*ListScheduledNotificationsRequest)(nil),     // 29: v1consortium.services.ListScheduledNotificationsRequest
	(*ScheduledNotification)(nil),                 // 30: v1consortium.services.ScheduledNotification
	(*ListScheduledNotificationsResponse)(nil),    // 31: v1consortium.services.ListScheduledNotificationsResponse
	(*CancelScheduledNotificationRequest)(nil),    // 32: v1consortium.services.CancelScheduledNotificationRequest
	(*CancelScheduledNotificationResponse)(nil),   // 33: v1consortium.services.CancelScheduledNotificationResponse
	(*GetNotificationAnalyticsRequest)(nil),       // 34: v1consortium.services.GetNotificationAnalyticsRequest
	(*NotificationMetrics)(nil),                   // 35: v1consortium.services.NotificationMetrics
	(*GetNotificationAnalyticsResponse)(nil),      // 36: v1consortium.services.GetNotificationAnalyticsResponse
	nil,                                           // 37: v1consortium.services.SendNotificationRequest.TemplateDataEntry
	nil,                                           // 38: v1consortium.services.SendBulkNotificationRequest.TemplateDataEntry
	nil,                                           // 39: v1consortium.services.BulkNotificationRecipient.TemplateDataEntry
	nil,                                           // 40: v1consortium.services.NotificationMetrics.ByChannelEntry
	nil,                                           // 41: v1consortium.services.NotificationMetrics.ByTypeEntry
	(*timestamppb.Timestamp)(nil),                 // 42: google.protobuf.Timestamp
	(*v1consortium_backend.Notifications)(nil),    // 43: v1consortium.backend.Notifications
}
var file_services_v1_notification_proto_depIdxs = []int32{
	37, // 0: v1consortium.services.SendNotificationRequest.template_data:type_name -> v1consortium.services.SendNotificationRequest.TemplateDataEntry
	42, // 1: v1consortium.services.SendNotificationRequest.scheduled_for:type_name -> google.protobuf.Timestamp
	43, // 2: v1consortium.services.SendNotificationResponse.notification:type_name -> v1consortium.backend.Notifications
	43, // 3: v1consortium.services.GetNotificationResponse.notification:type_name -> v1consortium.backend.Notifications
	42, // 4: v1consortium.services.ListNotificationsRequest.start_date:type_name -> google.protobuf.Timestamp
	42, // 5: v1consortium.services.ListNotificationsRequest.end_date:type_name -> google.protobuf.Timestamp
	43, // 6: v1consortium.services.ListNotificationsResponse.notifications:type_name -> v1consortium.backend.Notifications
	42, // 7: v1consortium.services.NotificationTemplate.created_at:type_name -> google.protobuf.Timestamp
	42, // 8: v1consortium.services.NotificationTemplate.updated_at:type_name -> google.protobuf.Timestamp
	13, // 9: v1consortium.services.GetNotificationTemplateResponse.template:type_name -> v1consortium.services.NotificationTemplate
	13, // 10: v1consortium.services.ListNotificationTemplatesResponse.templates:type_name -> v1consortium.services.NotificationTemplate
	13, // 11: v1consortium.services.UpdateNotificationTemplateResponse.template:type_name -> v1consortium.services.NotificationTemplate
	20, // 12: v1consortium.services.GetNotificationPreferencesResponse.preferences:type_name -> v1consortium.services.NotificationPreference
	20, // 13: v1consortium.services.UpdateNotificationPreferencesRequest.preferences:type_name -> v1consortium.services.NotificationPreference
	38, // 14: v1consortium.services.SendBulkNotificationRequest.template_data:type_name -> v1consortium.services.SendBulkNotificationRequest.TemplateDataEntry
	25, // 15: v1consortium.services.SendBulkNotificationRequest.recipients:type_name -> v1consortium.services.BulkNotificationRecipient
	39, // 16: v1consortium.services.BulkNotificationRecipient.template_data:type_name -> v1consortium.services.BulkNotificationRecipient.TemplateDataEntry
	42, // 17: v1consortium.services.ScheduleNotificationRequest.send_at:type_name -> google.protobuf.Timestamp
	42, // 18: v1consortium.services.ScheduleNotificationRequest.recurrence_end:type_name -> google.protobuf.Timestamp
	42, // 19: v1consortium.services.ScheduledNotification.send_at:type_name -> google.protobuf.Timestamp
	42, // 20: v1consortium.services.ScheduledNotification.created_at:type_name -> google.protobuf.Timestamp
	30, // 21: v1consortium.services.ListScheduledNotificationsResponse.notifications:type_name -> v1consortium.services.ScheduledNotification
	42, // 22: v1consortium.services.GetNotificationAnalyticsRequest.start_date:type_name -> google.protobuf.Timestamp
	42, // 23: v1consortium.services.GetNotificationAnalyticsRequest.end_date:type_name -> google.protobuf.Timestamp
	40, // 24: v1consortium.services.NotificationMetrics.by_channel:type_name -> v1consortium.services.NotificationMetrics.ByChannelEntry
	41, // 25: v1consortium.services.NotificationMetrics.by_type:type_name -> v1consortium.services.NotificationMetrics.ByTypeEntry
	35, // 26: v1consortium.services.GetNotificationAnalyticsResponse.metrics:type_name -> v1consortium.services.NotificationMetrics
	0,  // 27: v1consortium.services.NotificationService.SendNotification:input_type -> v1consortium.services.SendNotificationRequest
	2,  // 28: v1consortium.services.NotificationService.GetNotification:input_type -> v1consortium.services.GetNotificationRequest
	4,  // 29: v1consortium.services.NotificationService.ListNotifications:input_type -> v1consortium.services.ListNotificationsRequest
	6,  // 30: v1consortium.services.NotificationService.MarkNotificationRead:input_type -> v1consortium.services.MarkNotificationReadRequest
	8,  // 31: v1consortium.services.NotificationService.MarkAllNotificationsRead:input_type -> v1consortium.services.MarkAllNotificationsReadRequest
	10, // 32: v1consortium.services.NotificationService.CreateNotificationTemplate:input_type -> v1consortium.services.CreateNotificationTemplateRequest
	12, // 33: v1consortium.services.NotificationService.GetNotificationTemplate:input_type -> v1consortium.services.GetNotificationTemplateRequest
	15, // 34: v1consortium.services.NotificationService.ListNotificationTemplates:input_type -> v1consortium.services.ListNotificationTemplatesRequest
	17, // 35: v1consortium.services.NotificationService.UpdateNotificationTemplate:input_type -> v1consortium.services.UpdateNotificationTemplateRequest
	19, // 36: v1consortium.services.NotificationService.GetNotificationPreferences:input_type -> v1consortium.services.GetNotificationPreferencesRequest
	22, // 37: v1consortium.services.NotificationService.UpdateNotificationPreferences:input_type -> v1consortium.services.UpdateNotificationPreferencesRequest
	24, // 38: v1consortium.services.NotificationService.SendBulkNotification:input_type -> v1consortium.services.SendBulkNotificationRequest
	27, // 39: v1consortium.services.NotificationService.ScheduleNotification:input_type -> v1consortium.services.ScheduleNotificationRequest
	29, // 40: v1consortium.services.NotificationService.ListScheduledNotifications:input_type -> v1consortium.services.ListScheduledNotificationsRequest
	32, // 41: v1consortium.services.NotificationService.CancelScheduledNotification:input_type -> v1consortium.services.CancelScheduledNotificationRequest
	34, // 42: v1consortium.services.NotificationService.GetNotificationAnalytics:input_type -> v1consortium.services.GetNotificationAnalyticsRequest
	1,  // 43: v1consortium.services.NotificationService.SendNotification:output_type -> v1consortium.services.SendNotificationResponse
	3,  // 44: v1consortium.services.NotificationService.GetNotification:output_type -> v1consortium.services.GetNotificationResponse
	5,  // 45: v1consortium.services.NotificationService.ListNotifications:output_type -> v1consortium.services.ListNotificationsResponse
	7,  // 46: v1consortium.services.NotificationService.MarkNotificationRead:output_type -> v1consortium.services.MarkNotificationReadResponse
	9,  // 47: v1consortium.services.NotificationService.MarkAllNotificationsRead:output_type -> v1consortium.services.MarkAllNotificationsReadResponse
	11, // 48: v1consortium.services.NotificationService.CreateNotificationTemplate:output_type -> v1consortium.services.CreateNotificationTemplateResponse
	14, // 49: v1consortium.services.NotificationService.GetNotificationTemplate:output_type -> v1consortium.services.GetNotificationTemplateResponse
	16, // 50: v1consortium.services.NotificationService.ListNotificationTemplates:output_type -> v1consortium.services.ListNotificationTemplatesResponse
	18, // 51: v1consortium.services.NotificationService.UpdateNotificationTemplate:output_type -> v1consortium.services.UpdateNotificationTemplateResponse
	21, // 52: v1consortium.services.NotificationService.GetNotificationPreferences:output_type -> v1consortium.services.GetNotificationPreferencesResponse
	23, // 53: v1consortium.services.NotificationService.UpdateNotificationPreferences:output_type -> v1consortium.services.UpdateNotificationPreferencesResponse
	26, // 54: v1consortium.services.NotificationService.SendBulkNotification:output_type -> v1consortium.services.SendBulkNotificationResponse
	28, // 55: v1consortium.services.NotificationService.ScheduleNotification:output_type -> v1consortium.services.ScheduleNotificationResponse
	31, // 56: v1consortium.services.NotificationService.ListScheduledNotifications:output_type -> v1consortium.services.ListScheduledNotificationsResponse
	33, // 57: v1consortium.services.NotificationService.CancelScheduledNotification:output_type -> v1consortium.services.CancelScheduledNotificationResponse
	36, // 58: v1consortium.services.NotificationService.GetNotificationAnalytics:output_type -> v1consortium.services.GetNotificationAnalyticsResponse
	43, // [43:59] is the sub-list for method output_type
	27, // [27:43] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_services_v1_notification_proto_init() }
func file_services_v1_notification_proto_init() {
	if File_services_v1_notification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_v1_notification_proto_rawDesc), len(file_services_v1_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_v1_notification_proto_goTypes,
		DependencyIndexes: file_services_v1_notification_proto_depIdxs,
		MessageInfos:      file_services_v1_notification_proto_msgTypes,
	}.Build()
	File_services_v1_notification_proto = out.File
	file_services_v1_notification_proto_goTypes = nil
	file_services_v1_notification_proto_depIdxs = nil
}
