// ==========================================================================
// Code generated and maintained by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: pbentity/drug_alcohol_tests.proto

package v1consortium_backend

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DrugAlcoholTests struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Id                       string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`                                               //
	OrganizationId           string                 `protobuf:"bytes,2,opt,name=OrganizationId,proto3" json:"OrganizationId,omitempty"`                       //
	UserId                   string                 `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`                                       //
	ProgramId                string                 `protobuf:"bytes,4,opt,name=ProgramId,proto3" json:"ProgramId,omitempty"`                                 //
	SelectionId              string                 `protobuf:"bytes,5,opt,name=SelectionId,proto3" json:"SelectionId,omitempty"`                             //
	TestType                 string                 `protobuf:"bytes,6,opt,name=TestType,proto3" json:"TestType,omitempty"`                                   //
	TestCategory             string                 `protobuf:"bytes,7,opt,name=TestCategory,proto3" json:"TestCategory,omitempty"`                           //
	Status                   string                 `protobuf:"bytes,8,opt,name=Status,proto3" json:"Status,omitempty"`                                       //
	Result                   string                 `protobuf:"bytes,9,opt,name=Result,proto3" json:"Result,omitempty"`                                       //
	IsDotTest                bool                   `protobuf:"varint,10,opt,name=IsDotTest,proto3" json:"IsDotTest,omitempty"`                               //
	OrderedDate              *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=OrderedDate,proto3" json:"OrderedDate,omitempty"`                            //
	OrderedBy                string                 `protobuf:"bytes,12,opt,name=OrderedBy,proto3" json:"OrderedBy,omitempty"`                                //
	DueDate                  *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=DueDate,proto3" json:"DueDate,omitempty"`                                    //
	ExternalOrderId          string                 `protobuf:"bytes,14,opt,name=ExternalOrderId,proto3" json:"ExternalOrderId,omitempty"`                    //
	ExternalFacilityId       string                 `protobuf:"bytes,15,opt,name=ExternalFacilityId,proto3" json:"ExternalFacilityId,omitempty"`              //
	FacilityName             string                 `protobuf:"bytes,16,opt,name=FacilityName,proto3" json:"FacilityName,omitempty"`                          //
	FacilityAddress          string                 `protobuf:"bytes,17,opt,name=FacilityAddress,proto3" json:"FacilityAddress,omitempty"`                    //
	CollectionDate           *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=CollectionDate,proto3" json:"CollectionDate,omitempty"`                      //
	CollectedBy              string                 `protobuf:"bytes,19,opt,name=CollectedBy,proto3" json:"CollectedBy,omitempty"`                            //
	LabId                    string                 `protobuf:"bytes,20,opt,name=LabId,proto3" json:"LabId,omitempty"`                                        //
	LabAccessionNumber       string                 `protobuf:"bytes,21,opt,name=LabAccessionNumber,proto3" json:"LabAccessionNumber,omitempty"`              //
	ResultDate               *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=ResultDate,proto3" json:"ResultDate,omitempty"`                              //
	ResultReceivedDate       *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=ResultReceivedDate,proto3" json:"ResultReceivedDate,omitempty"`              //
	MroReviewRequired        bool                   `protobuf:"varint,24,opt,name=MroReviewRequired,proto3" json:"MroReviewRequired,omitempty"`               //
	MroId                    string                 `protobuf:"bytes,25,opt,name=MroId,proto3" json:"MroId,omitempty"`                                        //
	MroReviewDate            *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=MroReviewDate,proto3" json:"MroReviewDate,omitempty"`                        //
	MroNotes                 string                 `protobuf:"bytes,27,opt,name=MroNotes,proto3" json:"MroNotes,omitempty"`                                  //
	RequiresImmediateRemoval bool                   `protobuf:"varint,28,opt,name=RequiresImmediateRemoval,proto3" json:"RequiresImmediateRemoval,omitempty"` //
	ReturnToDutyRequired     bool                   `protobuf:"varint,29,opt,name=ReturnToDutyRequired,proto3" json:"ReturnToDutyRequired,omitempty"`         //
	FollowUpTestsRequired    int32                  `protobuf:"varint,30,opt,name=FollowUpTestsRequired,proto3" json:"FollowUpTestsRequired,omitempty"`       //
	Notes                    string                 `protobuf:"bytes,31,opt,name=Notes,proto3" json:"Notes,omitempty"`                                        //
	CreatedAt                *timestamppb.Timestamp `protobuf:"bytes,32,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`                                //
	UpdatedAt                *timestamppb.Timestamp `protobuf:"bytes,33,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`                                //
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *DrugAlcoholTests) Reset() {
	*x = DrugAlcoholTests{}
	mi := &file_pbentity_drug_alcohol_tests_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrugAlcoholTests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugAlcoholTests) ProtoMessage() {}

func (x *DrugAlcoholTests) ProtoReflect() protoreflect.Message {
	mi := &file_pbentity_drug_alcohol_tests_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugAlcoholTests.ProtoReflect.Descriptor instead.
func (*DrugAlcoholTests) Descriptor() ([]byte, []int) {
	return file_pbentity_drug_alcohol_tests_proto_rawDescGZIP(), []int{0}
}

func (x *DrugAlcoholTests) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DrugAlcoholTests) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *DrugAlcoholTests) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DrugAlcoholTests) GetProgramId() string {
	if x != nil {
		return x.ProgramId
	}
	return ""
}

func (x *DrugAlcoholTests) GetSelectionId() string {
	if x != nil {
		return x.SelectionId
	}
	return ""
}

func (x *DrugAlcoholTests) GetTestType() string {
	if x != nil {
		return x.TestType
	}
	return ""
}

func (x *DrugAlcoholTests) GetTestCategory() string {
	if x != nil {
		return x.TestCategory
	}
	return ""
}

func (x *DrugAlcoholTests) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DrugAlcoholTests) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *DrugAlcoholTests) GetIsDotTest() bool {
	if x != nil {
		return x.IsDotTest
	}
	return false
}

func (x *DrugAlcoholTests) GetOrderedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OrderedDate
	}
	return nil
}

func (x *DrugAlcoholTests) GetOrderedBy() string {
	if x != nil {
		return x.OrderedBy
	}
	return ""
}

func (x *DrugAlcoholTests) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *DrugAlcoholTests) GetExternalOrderId() string {
	if x != nil {
		return x.ExternalOrderId
	}
	return ""
}

func (x *DrugAlcoholTests) GetExternalFacilityId() string {
	if x != nil {
		return x.ExternalFacilityId
	}
	return ""
}

func (x *DrugAlcoholTests) GetFacilityName() string {
	if x != nil {
		return x.FacilityName
	}
	return ""
}

func (x *DrugAlcoholTests) GetFacilityAddress() string {
	if x != nil {
		return x.FacilityAddress
	}
	return ""
}

func (x *DrugAlcoholTests) GetCollectionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CollectionDate
	}
	return nil
}

func (x *DrugAlcoholTests) GetCollectedBy() string {
	if x != nil {
		return x.CollectedBy
	}
	return ""
}

func (x *DrugAlcoholTests) GetLabId() string {
	if x != nil {
		return x.LabId
	}
	return ""
}

func (x *DrugAlcoholTests) GetLabAccessionNumber() string {
	if x != nil {
		return x.LabAccessionNumber
	}
	return ""
}

func (x *DrugAlcoholTests) GetResultDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ResultDate
	}
	return nil
}

func (x *DrugAlcoholTests) GetResultReceivedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ResultReceivedDate
	}
	return nil
}

func (x *DrugAlcoholTests) GetMroReviewRequired() bool {
	if x != nil {
		return x.MroReviewRequired
	}
	return false
}

func (x *DrugAlcoholTests) GetMroId() string {
	if x != nil {
		return x.MroId
	}
	return ""
}

func (x *DrugAlcoholTests) GetMroReviewDate() *timestamppb.Timestamp {
	if x != nil {
		return x.MroReviewDate
	}
	return nil
}

func (x *DrugAlcoholTests) GetMroNotes() string {
	if x != nil {
		return x.MroNotes
	}
	return ""
}

func (x *DrugAlcoholTests) GetRequiresImmediateRemoval() bool {
	if x != nil {
		return x.RequiresImmediateRemoval
	}
	return false
}

func (x *DrugAlcoholTests) GetReturnToDutyRequired() bool {
	if x != nil {
		return x.ReturnToDutyRequired
	}
	return false
}

func (x *DrugAlcoholTests) GetFollowUpTestsRequired() int32 {
	if x != nil {
		return x.FollowUpTestsRequired
	}
	return 0
}

func (x *DrugAlcoholTests) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *DrugAlcoholTests) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DrugAlcoholTests) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_pbentity_drug_alcohol_tests_proto protoreflect.FileDescriptor

const file_pbentity_drug_alcohol_tests_proto_rawDesc = "" +
	"\n" +
	"!pbentity/drug_alcohol_tests.proto\x12\x14v1consortium.backend\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf0\n" +
	"\n" +
	"\x10DrugAlcoholTests\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\tR\x02Id\x12&\n" +
	"\x0eOrganizationId\x18\x02 \x01(\tR\x0eOrganizationId\x12\x16\n" +
	"\x06UserId\x18\x03 \x01(\tR\x06UserId\x12\x1c\n" +
	"\tProgramId\x18\x04 \x01(\tR\tProgramId\x12 \n" +
	"\vSelectionId\x18\x05 \x01(\tR\vSelectionId\x12\x1a\n" +
	"\bTestType\x18\x06 \x01(\tR\bTestType\x12\"\n" +
	"\fTestCategory\x18\a \x01(\tR\fTestCategory\x12\x16\n" +
	"\x06Status\x18\b \x01(\tR\x06Status\x12\x16\n" +
	"\x06Result\x18\t \x01(\tR\x06Result\x12\x1c\n" +
	"\tIsDotTest\x18\n" +
	" \x01(\bR\tIsDotTest\x12<\n" +
	"\vOrderedDate\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vOrderedDate\x12\x1c\n" +
	"\tOrderedBy\x18\f \x01(\tR\tOrderedBy\x124\n" +
	"\aDueDate\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\aDueDate\x12(\n" +
	"\x0fExternalOrderId\x18\x0e \x01(\tR\x0fExternalOrderId\x12.\n" +
	"\x12ExternalFacilityId\x18\x0f \x01(\tR\x12ExternalFacilityId\x12\"\n" +
	"\fFacilityName\x18\x10 \x01(\tR\fFacilityName\x12(\n" +
	"\x0fFacilityAddress\x18\x11 \x01(\tR\x0fFacilityAddress\x12B\n" +
	"\x0eCollectionDate\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\x0eCollectionDate\x12 \n" +
	"\vCollectedBy\x18\x13 \x01(\tR\vCollectedBy\x12\x14\n" +
	"\x05LabId\x18\x14 \x01(\tR\x05LabId\x12.\n" +
	"\x12LabAccessionNumber\x18\x15 \x01(\tR\x12LabAccessionNumber\x12:\n" +
	"\n" +
	"ResultDate\x18\x16 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"ResultDate\x12J\n" +
	"\x12ResultReceivedDate\x18\x17 \x01(\v2\x1a.google.protobuf.TimestampR\x12ResultReceivedDate\x12,\n" +
	"\x11MroReviewRequired\x18\x18 \x01(\bR\x11MroReviewRequired\x12\x14\n" +
	"\x05MroId\x18\x19 \x01(\tR\x05MroId\x12@\n" +
	"\rMroReviewDate\x18\x1a \x01(\v2\x1a.google.protobuf.TimestampR\rMroReviewDate\x12\x1a\n" +
	"\bMroNotes\x18\x1b \x01(\tR\bMroNotes\x12:\n" +
	"\x18RequiresImmediateRemoval\x18\x1c \x01(\bR\x18RequiresImmediateRemoval\x122\n" +
	"\x14ReturnToDutyRequired\x18\x1d \x01(\bR\x14ReturnToDutyRequired\x124\n" +
	"\x15FollowUpTestsRequired\x18\x1e \x01(\x05R\x15FollowUpTestsRequired\x12\x14\n" +
	"\x05Notes\x18\x1f \x01(\tR\x05Notes\x128\n" +
	"\tCreatedAt\x18  \x01(\v2\x1a.google.protobuf.TimestampR\tCreatedAt\x128\n" +
	"\tUpdatedAt\x18! \x01(\v2\x1a.google.protobuf.TimestampR\tUpdatedAtB\x16Z\x14v1consortium.backendb\x06proto3"

var (
	file_pbentity_drug_alcohol_tests_proto_rawDescOnce sync.Once
	file_pbentity_drug_alcohol_tests_proto_rawDescData []byte
)

func file_pbentity_drug_alcohol_tests_proto_rawDescGZIP() []byte {
	file_pbentity_drug_alcohol_tests_proto_rawDescOnce.Do(func() {
		file_pbentity_drug_alcohol_tests_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pbentity_drug_alcohol_tests_proto_rawDesc), len(file_pbentity_drug_alcohol_tests_proto_rawDesc)))
	})
	return file_pbentity_drug_alcohol_tests_proto_rawDescData
}

var file_pbentity_drug_alcohol_tests_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pbentity_drug_alcohol_tests_proto_goTypes = []any{
	(*DrugAlcoholTests)(nil),      // 0: v1consortium.backend.DrugAlcoholTests
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_pbentity_drug_alcohol_tests_proto_depIdxs = []int32{
	1, // 0: v1consortium.backend.DrugAlcoholTests.OrderedDate:type_name -> google.protobuf.Timestamp
	1, // 1: v1consortium.backend.DrugAlcoholTests.DueDate:type_name -> google.protobuf.Timestamp
	1, // 2: v1consortium.backend.DrugAlcoholTests.CollectionDate:type_name -> google.protobuf.Timestamp
	1, // 3: v1consortium.backend.DrugAlcoholTests.ResultDate:type_name -> google.protobuf.Timestamp
	1, // 4: v1consortium.backend.DrugAlcoholTests.ResultReceivedDate:type_name -> google.protobuf.Timestamp
	1, // 5: v1consortium.backend.DrugAlcoholTests.MroReviewDate:type_name -> google.protobuf.Timestamp
	1, // 6: v1consortium.backend.DrugAlcoholTests.CreatedAt:type_name -> google.protobuf.Timestamp
	1, // 7: v1consortium.backend.DrugAlcoholTests.UpdatedAt:type_name -> google.protobuf.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pbentity_drug_alcohol_tests_proto_init() }
func file_pbentity_drug_alcohol_tests_proto_init() {
	if File_pbentity_drug_alcohol_tests_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pbentity_drug_alcohol_tests_proto_rawDesc), len(file_pbentity_drug_alcohol_tests_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pbentity_drug_alcohol_tests_proto_goTypes,
		DependencyIndexes: file_pbentity_drug_alcohol_tests_proto_depIdxs,
		MessageInfos:      file_pbentity_drug_alcohol_tests_proto_msgTypes,
	}.Build()
	File_pbentity_drug_alcohol_tests_proto = out.File
	file_pbentity_drug_alcohol_tests_proto_goTypes = nil
	file_pbentity_drug_alcohol_tests_proto_depIdxs = nil
}
