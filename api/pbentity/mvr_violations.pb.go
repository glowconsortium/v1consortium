// ==========================================================================
// Code generated and maintained by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: pbentity/mvr_violations.proto

package pbentity

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MvrViolations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                           string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`                                                       //
	MvrReportId                  string                 `protobuf:"bytes,2,opt,name=MvrReportId,proto3" json:"MvrReportId,omitempty"`                                     //
	ViolationDate                *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=ViolationDate,proto3" json:"ViolationDate,omitempty"`                                 //
	ViolationCode                string                 `protobuf:"bytes,4,opt,name=ViolationCode,proto3" json:"ViolationCode,omitempty"`                                 //
	ViolationDescription         string                 `protobuf:"bytes,5,opt,name=ViolationDescription,proto3" json:"ViolationDescription,omitempty"`                   //
	ViolationType                string                 `protobuf:"bytes,6,opt,name=ViolationType,proto3" json:"ViolationType,omitempty"`                                 //
	Severity                     string                 `protobuf:"bytes,7,opt,name=Severity,proto3" json:"Severity,omitempty"`                                           //
	ConvictionDate               *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=ConvictionDate,proto3" json:"ConvictionDate,omitempty"`                               //
	FineAmount                   string                 `protobuf:"bytes,9,opt,name=FineAmount,proto3" json:"FineAmount,omitempty"`                                       //
	Points                       int32                  `protobuf:"varint,10,opt,name=Points,proto3" json:"Points,omitempty"`                                             //
	State                        string                 `protobuf:"bytes,11,opt,name=State,proto3" json:"State,omitempty"`                                                //
	CourtName                    string                 `protobuf:"bytes,12,opt,name=CourtName,proto3" json:"CourtName,omitempty"`                                        //
	CaseNumber                   string                 `protobuf:"bytes,13,opt,name=CaseNumber,proto3" json:"CaseNumber,omitempty"`                                      //
	Disqualifying                bool                   `protobuf:"varint,14,opt,name=Disqualifying,proto3" json:"Disqualifying,omitempty"`                               //
	RequiresEmployerNotification bool                   `protobuf:"varint,15,opt,name=RequiresEmployerNotification,proto3" json:"RequiresEmployerNotification,omitempty"` //
	AffectsCdl                   bool                   `protobuf:"varint,16,opt,name=AffectsCdl,proto3" json:"AffectsCdl,omitempty"`                                     //
	CreatedAt                    *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`                                        //
}

func (x *MvrViolations) Reset() {
	*x = MvrViolations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbentity_mvr_violations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MvrViolations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MvrViolations) ProtoMessage() {}

func (x *MvrViolations) ProtoReflect() protoreflect.Message {
	mi := &file_pbentity_mvr_violations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MvrViolations.ProtoReflect.Descriptor instead.
func (*MvrViolations) Descriptor() ([]byte, []int) {
	return file_pbentity_mvr_violations_proto_rawDescGZIP(), []int{0}
}

func (x *MvrViolations) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MvrViolations) GetMvrReportId() string {
	if x != nil {
		return x.MvrReportId
	}
	return ""
}

func (x *MvrViolations) GetViolationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ViolationDate
	}
	return nil
}

func (x *MvrViolations) GetViolationCode() string {
	if x != nil {
		return x.ViolationCode
	}
	return ""
}

func (x *MvrViolations) GetViolationDescription() string {
	if x != nil {
		return x.ViolationDescription
	}
	return ""
}

func (x *MvrViolations) GetViolationType() string {
	if x != nil {
		return x.ViolationType
	}
	return ""
}

func (x *MvrViolations) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *MvrViolations) GetConvictionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ConvictionDate
	}
	return nil
}

func (x *MvrViolations) GetFineAmount() string {
	if x != nil {
		return x.FineAmount
	}
	return ""
}

func (x *MvrViolations) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *MvrViolations) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *MvrViolations) GetCourtName() string {
	if x != nil {
		return x.CourtName
	}
	return ""
}

func (x *MvrViolations) GetCaseNumber() string {
	if x != nil {
		return x.CaseNumber
	}
	return ""
}

func (x *MvrViolations) GetDisqualifying() bool {
	if x != nil {
		return x.Disqualifying
	}
	return false
}

func (x *MvrViolations) GetRequiresEmployerNotification() bool {
	if x != nil {
		return x.RequiresEmployerNotification
	}
	return false
}

func (x *MvrViolations) GetAffectsCdl() bool {
	if x != nil {
		return x.AffectsCdl
	}
	return false
}

func (x *MvrViolations) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_pbentity_mvr_violations_proto protoreflect.FileDescriptor

var file_pbentity_mvr_violations_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x62, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x6d, 0x76, 0x72, 0x5f, 0x76,
	0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x70, 0x62, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x05, 0x0a, 0x0d, 0x4d,
	0x76, 0x72, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x4d, 0x76, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4d, 0x76, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x40,
	0x0a, 0x0d, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0d, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x56, 0x69,
	0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x6e, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x61, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x43, 0x61, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x44, 0x69, 0x73, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x44, 0x69, 0x73, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69,
	0x6e, 0x67, 0x12, 0x42, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x73, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x43, 0x64, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x41, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x73, 0x43, 0x64, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x42, 0x1b, 0x5a, 0x19, 0x76, 0x31, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x75, 0x6d,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pbentity_mvr_violations_proto_rawDescOnce sync.Once
	file_pbentity_mvr_violations_proto_rawDescData = file_pbentity_mvr_violations_proto_rawDesc
)

func file_pbentity_mvr_violations_proto_rawDescGZIP() []byte {
	file_pbentity_mvr_violations_proto_rawDescOnce.Do(func() {
		file_pbentity_mvr_violations_proto_rawDescData = protoimpl.X.CompressGZIP(file_pbentity_mvr_violations_proto_rawDescData)
	})
	return file_pbentity_mvr_violations_proto_rawDescData
}

var file_pbentity_mvr_violations_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pbentity_mvr_violations_proto_goTypes = []interface{}{
	(*MvrViolations)(nil),         // 0: pbentity.MvrViolations
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_pbentity_mvr_violations_proto_depIdxs = []int32{
	1, // 0: pbentity.MvrViolations.ViolationDate:type_name -> google.protobuf.Timestamp
	1, // 1: pbentity.MvrViolations.ConvictionDate:type_name -> google.protobuf.Timestamp
	1, // 2: pbentity.MvrViolations.CreatedAt:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pbentity_mvr_violations_proto_init() }
func file_pbentity_mvr_violations_proto_init() {
	if File_pbentity_mvr_violations_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pbentity_mvr_violations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MvrViolations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pbentity_mvr_violations_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pbentity_mvr_violations_proto_goTypes,
		DependencyIndexes: file_pbentity_mvr_violations_proto_depIdxs,
		MessageInfos:      file_pbentity_mvr_violations_proto_msgTypes,
	}.Build()
	File_pbentity_mvr_violations_proto = out.File
	file_pbentity_mvr_violations_proto_rawDesc = nil
	file_pbentity_mvr_violations_proto_goTypes = nil
	file_pbentity_mvr_violations_proto_depIdxs = nil
}
