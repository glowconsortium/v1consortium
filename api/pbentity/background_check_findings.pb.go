// ==========================================================================
// Code generated and maintained by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: pbentity/background_check_findings.proto

package pbentity

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BackgroundCheckFindings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                               string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`                                                               //
	BackgroundCheckId                string                 `protobuf:"bytes,2,opt,name=BackgroundCheckId,proto3" json:"BackgroundCheckId,omitempty"`                                 //
	FindingType                      string                 `protobuf:"bytes,3,opt,name=FindingType,proto3" json:"FindingType,omitempty"`                                             //
	Severity                         string                 `protobuf:"bytes,4,opt,name=Severity,proto3" json:"Severity,omitempty"`                                                   //
	Description                      string                 `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`                                             //
	DateOfRecord                     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=DateOfRecord,proto3" json:"DateOfRecord,omitempty"`                                           //
	Jurisdiction                     string                 `protobuf:"bytes,7,opt,name=Jurisdiction,proto3" json:"Jurisdiction,omitempty"`                                           //
	CaseNumber                       string                 `protobuf:"bytes,8,opt,name=CaseNumber,proto3" json:"CaseNumber,omitempty"`                                               //
	Disposition                      string                 `protobuf:"bytes,9,opt,name=Disposition,proto3" json:"Disposition,omitempty"`                                             //
	JobRelated                       bool                   `protobuf:"varint,10,opt,name=JobRelated,proto3" json:"JobRelated,omitempty"`                                             //
	Disqualifying                    bool                   `protobuf:"varint,11,opt,name=Disqualifying,proto3" json:"Disqualifying,omitempty"`                                       //
	RequiresIndividualizedAssessment bool                   `protobuf:"varint,12,opt,name=RequiresIndividualizedAssessment,proto3" json:"RequiresIndividualizedAssessment,omitempty"` //
	CreatedAt                        *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`                                                //
}

func (x *BackgroundCheckFindings) Reset() {
	*x = BackgroundCheckFindings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbentity_background_check_findings_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackgroundCheckFindings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundCheckFindings) ProtoMessage() {}

func (x *BackgroundCheckFindings) ProtoReflect() protoreflect.Message {
	mi := &file_pbentity_background_check_findings_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundCheckFindings.ProtoReflect.Descriptor instead.
func (*BackgroundCheckFindings) Descriptor() ([]byte, []int) {
	return file_pbentity_background_check_findings_proto_rawDescGZIP(), []int{0}
}

func (x *BackgroundCheckFindings) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BackgroundCheckFindings) GetBackgroundCheckId() string {
	if x != nil {
		return x.BackgroundCheckId
	}
	return ""
}

func (x *BackgroundCheckFindings) GetFindingType() string {
	if x != nil {
		return x.FindingType
	}
	return ""
}

func (x *BackgroundCheckFindings) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *BackgroundCheckFindings) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BackgroundCheckFindings) GetDateOfRecord() *timestamppb.Timestamp {
	if x != nil {
		return x.DateOfRecord
	}
	return nil
}

func (x *BackgroundCheckFindings) GetJurisdiction() string {
	if x != nil {
		return x.Jurisdiction
	}
	return ""
}

func (x *BackgroundCheckFindings) GetCaseNumber() string {
	if x != nil {
		return x.CaseNumber
	}
	return ""
}

func (x *BackgroundCheckFindings) GetDisposition() string {
	if x != nil {
		return x.Disposition
	}
	return ""
}

func (x *BackgroundCheckFindings) GetJobRelated() bool {
	if x != nil {
		return x.JobRelated
	}
	return false
}

func (x *BackgroundCheckFindings) GetDisqualifying() bool {
	if x != nil {
		return x.Disqualifying
	}
	return false
}

func (x *BackgroundCheckFindings) GetRequiresIndividualizedAssessment() bool {
	if x != nil {
		return x.RequiresIndividualizedAssessment
	}
	return false
}

func (x *BackgroundCheckFindings) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_pbentity_background_check_findings_proto protoreflect.FileDescriptor

var file_pbentity_background_check_findings_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x62, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x66, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x62, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x04, 0x0a, 0x17, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x11, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x42, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3e, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x4a, 0x75, 0x72, 0x69, 0x73, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4a, 0x75, 0x72, 0x69, 0x73, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x61, 0x73, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x44, 0x69,
	0x73, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x4a, 0x0a, 0x20, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x20, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x49,
	0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x42, 0x1b, 0x5a, 0x19, 0x76, 0x31, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x75,
	0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pbentity_background_check_findings_proto_rawDescOnce sync.Once
	file_pbentity_background_check_findings_proto_rawDescData = file_pbentity_background_check_findings_proto_rawDesc
)

func file_pbentity_background_check_findings_proto_rawDescGZIP() []byte {
	file_pbentity_background_check_findings_proto_rawDescOnce.Do(func() {
		file_pbentity_background_check_findings_proto_rawDescData = protoimpl.X.CompressGZIP(file_pbentity_background_check_findings_proto_rawDescData)
	})
	return file_pbentity_background_check_findings_proto_rawDescData
}

var file_pbentity_background_check_findings_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pbentity_background_check_findings_proto_goTypes = []interface{}{
	(*BackgroundCheckFindings)(nil), // 0: pbentity.BackgroundCheckFindings
	(*timestamppb.Timestamp)(nil),   // 1: google.protobuf.Timestamp
}
var file_pbentity_background_check_findings_proto_depIdxs = []int32{
	1, // 0: pbentity.BackgroundCheckFindings.DateOfRecord:type_name -> google.protobuf.Timestamp
	1, // 1: pbentity.BackgroundCheckFindings.CreatedAt:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pbentity_background_check_findings_proto_init() }
func file_pbentity_background_check_findings_proto_init() {
	if File_pbentity_background_check_findings_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pbentity_background_check_findings_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackgroundCheckFindings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pbentity_background_check_findings_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pbentity_background_check_findings_proto_goTypes,
		DependencyIndexes: file_pbentity_background_check_findings_proto_depIdxs,
		MessageInfos:      file_pbentity_background_check_findings_proto_msgTypes,
	}.Build()
	File_pbentity_background_check_findings_proto = out.File
	file_pbentity_background_check_findings_proto_rawDesc = nil
	file_pbentity_background_check_findings_proto_goTypes = nil
	file_pbentity_background_check_findings_proto_depIdxs = nil
}
