// ==========================================================================
// Code generated and maintained by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: pbentity/certificates.proto

package pbentity

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Certificates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`                                  //
	OrganizationId     string                 `protobuf:"bytes,2,opt,name=OrganizationId,proto3" json:"OrganizationId,omitempty"`          //
	UserId             string                 `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`                          //
	CertificateType    string                 `protobuf:"bytes,4,opt,name=CertificateType,proto3" json:"CertificateType,omitempty"`        //
	Title              string                 `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`                            //
	Description        string                 `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`                //
	CertificateNumber  string                 `protobuf:"bytes,7,opt,name=CertificateNumber,proto3" json:"CertificateNumber,omitempty"`    //
	IssueDate          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=IssueDate,proto3" json:"IssueDate,omitempty"`                    //
	ExpirationDate     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=ExpirationDate,proto3" json:"ExpirationDate,omitempty"`          //
	TestId             string                 `protobuf:"bytes,10,opt,name=TestId,proto3" json:"TestId,omitempty"`                         //
	PhysicalId         string                 `protobuf:"bytes,11,opt,name=PhysicalId,proto3" json:"PhysicalId,omitempty"`                 //
	CertificateUrl     string                 `protobuf:"bytes,12,opt,name=CertificateUrl,proto3" json:"CertificateUrl,omitempty"`         //
	TemplateUsed       string                 `protobuf:"bytes,13,opt,name=TemplateUsed,proto3" json:"TemplateUsed,omitempty"`             //
	IsDigitallySigned  bool                   `protobuf:"varint,14,opt,name=IsDigitallySigned,proto3" json:"IsDigitallySigned,omitempty"`  //
	SignatureHash      string                 `protobuf:"bytes,15,opt,name=SignatureHash,proto3" json:"SignatureHash,omitempty"`           //
	SignatureTimestamp *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=SignatureTimestamp,proto3" json:"SignatureTimestamp,omitempty"` //
	DownloadCount      int32                  `protobuf:"varint,17,opt,name=DownloadCount,proto3" json:"DownloadCount,omitempty"`          //
	LastDownloadedAt   *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=LastDownloadedAt,proto3" json:"LastDownloadedAt,omitempty"`     //
	LastDownloadedBy   string                 `protobuf:"bytes,19,opt,name=LastDownloadedBy,proto3" json:"LastDownloadedBy,omitempty"`     //
	IsRevoked          bool                   `protobuf:"varint,20,opt,name=IsRevoked,proto3" json:"IsRevoked,omitempty"`                  //
	RevokedAt          *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=RevokedAt,proto3" json:"RevokedAt,omitempty"`                   //
	RevokedBy          string                 `protobuf:"bytes,22,opt,name=RevokedBy,proto3" json:"RevokedBy,omitempty"`                   //
	RevocationReason   string                 `protobuf:"bytes,23,opt,name=RevocationReason,proto3" json:"RevocationReason,omitempty"`     //
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,24,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`                   //
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,25,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`                   //
}

func (x *Certificates) Reset() {
	*x = Certificates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pbentity_certificates_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Certificates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificates) ProtoMessage() {}

func (x *Certificates) ProtoReflect() protoreflect.Message {
	mi := &file_pbentity_certificates_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificates.ProtoReflect.Descriptor instead.
func (*Certificates) Descriptor() ([]byte, []int) {
	return file_pbentity_certificates_proto_rawDescGZIP(), []int{0}
}

func (x *Certificates) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Certificates) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *Certificates) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Certificates) GetCertificateType() string {
	if x != nil {
		return x.CertificateType
	}
	return ""
}

func (x *Certificates) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Certificates) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Certificates) GetCertificateNumber() string {
	if x != nil {
		return x.CertificateNumber
	}
	return ""
}

func (x *Certificates) GetIssueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.IssueDate
	}
	return nil
}

func (x *Certificates) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *Certificates) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *Certificates) GetPhysicalId() string {
	if x != nil {
		return x.PhysicalId
	}
	return ""
}

func (x *Certificates) GetCertificateUrl() string {
	if x != nil {
		return x.CertificateUrl
	}
	return ""
}

func (x *Certificates) GetTemplateUsed() string {
	if x != nil {
		return x.TemplateUsed
	}
	return ""
}

func (x *Certificates) GetIsDigitallySigned() bool {
	if x != nil {
		return x.IsDigitallySigned
	}
	return false
}

func (x *Certificates) GetSignatureHash() string {
	if x != nil {
		return x.SignatureHash
	}
	return ""
}

func (x *Certificates) GetSignatureTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.SignatureTimestamp
	}
	return nil
}

func (x *Certificates) GetDownloadCount() int32 {
	if x != nil {
		return x.DownloadCount
	}
	return 0
}

func (x *Certificates) GetLastDownloadedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastDownloadedAt
	}
	return nil
}

func (x *Certificates) GetLastDownloadedBy() string {
	if x != nil {
		return x.LastDownloadedBy
	}
	return ""
}

func (x *Certificates) GetIsRevoked() bool {
	if x != nil {
		return x.IsRevoked
	}
	return false
}

func (x *Certificates) GetRevokedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RevokedAt
	}
	return nil
}

func (x *Certificates) GetRevokedBy() string {
	if x != nil {
		return x.RevokedBy
	}
	return ""
}

func (x *Certificates) GetRevocationReason() string {
	if x != nil {
		return x.RevocationReason
	}
	return ""
}

func (x *Certificates) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Certificates) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_pbentity_certificates_proto protoreflect.FileDescriptor

var file_pbentity_certificates_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x62, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70,
	0x62, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x08, 0x0a, 0x0c, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x49,
	0x73, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x49, 0x73, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x4a, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x46, 0x0a, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x4c, 0x61, 0x73,
	0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x42, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x52,
	0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x1b, 0x5a, 0x19, 0x76,
	0x31, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x75, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x62, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pbentity_certificates_proto_rawDescOnce sync.Once
	file_pbentity_certificates_proto_rawDescData = file_pbentity_certificates_proto_rawDesc
)

func file_pbentity_certificates_proto_rawDescGZIP() []byte {
	file_pbentity_certificates_proto_rawDescOnce.Do(func() {
		file_pbentity_certificates_proto_rawDescData = protoimpl.X.CompressGZIP(file_pbentity_certificates_proto_rawDescData)
	})
	return file_pbentity_certificates_proto_rawDescData
}

var file_pbentity_certificates_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pbentity_certificates_proto_goTypes = []interface{}{
	(*Certificates)(nil),          // 0: pbentity.Certificates
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_pbentity_certificates_proto_depIdxs = []int32{
	1, // 0: pbentity.Certificates.IssueDate:type_name -> google.protobuf.Timestamp
	1, // 1: pbentity.Certificates.ExpirationDate:type_name -> google.protobuf.Timestamp
	1, // 2: pbentity.Certificates.SignatureTimestamp:type_name -> google.protobuf.Timestamp
	1, // 3: pbentity.Certificates.LastDownloadedAt:type_name -> google.protobuf.Timestamp
	1, // 4: pbentity.Certificates.RevokedAt:type_name -> google.protobuf.Timestamp
	1, // 5: pbentity.Certificates.CreatedAt:type_name -> google.protobuf.Timestamp
	1, // 6: pbentity.Certificates.UpdatedAt:type_name -> google.protobuf.Timestamp
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_pbentity_certificates_proto_init() }
func file_pbentity_certificates_proto_init() {
	if File_pbentity_certificates_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pbentity_certificates_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Certificates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pbentity_certificates_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pbentity_certificates_proto_goTypes,
		DependencyIndexes: file_pbentity_certificates_proto_depIdxs,
		MessageInfos:      file_pbentity_certificates_proto_msgTypes,
	}.Build()
	File_pbentity_certificates_proto = out.File
	file_pbentity_certificates_proto_rawDesc = nil
	file_pbentity_certificates_proto_goTypes = nil
	file_pbentity_certificates_proto_depIdxs = nil
}
