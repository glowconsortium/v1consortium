// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file services/v1/drug_testing.proto (package v1consortium.services, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { DrugAlcoholTests } from "../../pbentity/drug_alcohol_tests_pb";
import { file_pbentity_drug_alcohol_tests } from "../../pbentity/drug_alcohol_tests_pb";
import type { PoolMemberships } from "../../pbentity/pool_memberships_pb";
import { file_pbentity_pool_memberships } from "../../pbentity/pool_memberships_pb";
import type { RandomSelectionMembers } from "../../pbentity/random_selection_members_pb";
import { file_pbentity_random_selection_members } from "../../pbentity/random_selection_members_pb";
import type { RandomSelections } from "../../pbentity/random_selections_pb";
import { file_pbentity_random_selections } from "../../pbentity/random_selections_pb";
import type { RandomTestingPools } from "../../pbentity/random_testing_pools_pb";
import { file_pbentity_random_testing_pools } from "../../pbentity/random_testing_pools_pb";
import type { TestingPrograms } from "../../pbentity/testing_programs_pb";
import { file_pbentity_testing_programs } from "../../pbentity/testing_programs_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file services/v1/drug_testing.proto.
 */
export const file_services_v1_drug_testing: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_protobuf_timestamp, file_pbentity_drug_alcohol_tests, file_pbentity_pool_memberships, file_pbentity_random_selection_members, file_pbentity_random_selections, file_pbentity_random_testing_pools, file_pbentity_testing_programs]);

/**
 * Testing Program Management
 *
 * @generated from message v1consortium.services.CreateTestingProgramRequest
 */
export type CreateTestingProgramRequest = Message<"v1consortium.services.CreateTestingProgramRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: bool is_dot_program = 3;
   */
  isDotProgram: boolean;

  /**
   * "5_panel", "10_panel", "custom"
   *
   * @generated from field: string drug_panel_type = 4;
   */
  drugPanelType: string;

  /**
   * @generated from field: bool alcohol_testing_enabled = 5;
   */
  alcoholTestingEnabled: boolean;

  /**
   * @generated from field: bool random_testing_enabled = 6;
   */
  randomTestingEnabled: boolean;

  /**
   * "25%", "50%", etc.
   *
   * @generated from field: string random_testing_rate = 7;
   */
  randomTestingRate: string;

  /**
   * "quarterly", "monthly", "annual"
   *
   * @generated from field: string testing_frequency = 8;
   */
  testingFrequency: string;
};

/**
 * Describes the message v1consortium.services.CreateTestingProgramRequest.
 * Use `create(CreateTestingProgramRequestSchema)` to create a new message.
 */
export const CreateTestingProgramRequestSchema: GenMessage<CreateTestingProgramRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 0);

/**
 * @generated from message v1consortium.services.CreateTestingProgramResponse
 */
export type CreateTestingProgramResponse = Message<"v1consortium.services.CreateTestingProgramResponse"> & {
  /**
   * @generated from field: pbentity.TestingPrograms program = 1;
   */
  program?: TestingPrograms;
};

/**
 * Describes the message v1consortium.services.CreateTestingProgramResponse.
 * Use `create(CreateTestingProgramResponseSchema)` to create a new message.
 */
export const CreateTestingProgramResponseSchema: GenMessage<CreateTestingProgramResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 1);

/**
 * @generated from message v1consortium.services.GetTestingProgramRequest
 */
export type GetTestingProgramRequest = Message<"v1consortium.services.GetTestingProgramRequest"> & {
  /**
   * @generated from field: string program_id = 1;
   */
  programId: string;
};

/**
 * Describes the message v1consortium.services.GetTestingProgramRequest.
 * Use `create(GetTestingProgramRequestSchema)` to create a new message.
 */
export const GetTestingProgramRequestSchema: GenMessage<GetTestingProgramRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 2);

/**
 * @generated from message v1consortium.services.GetTestingProgramResponse
 */
export type GetTestingProgramResponse = Message<"v1consortium.services.GetTestingProgramResponse"> & {
  /**
   * @generated from field: pbentity.TestingPrograms program = 1;
   */
  program?: TestingPrograms;
};

/**
 * Describes the message v1consortium.services.GetTestingProgramResponse.
 * Use `create(GetTestingProgramResponseSchema)` to create a new message.
 */
export const GetTestingProgramResponseSchema: GenMessage<GetTestingProgramResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 3);

/**
 * @generated from message v1consortium.services.ListTestingProgramsRequest
 */
export type ListTestingProgramsRequest = Message<"v1consortium.services.ListTestingProgramsRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: bool is_dot_program = 2;
   */
  isDotProgram: boolean;

  /**
   * @generated from field: bool is_active = 3;
   */
  isActive: boolean;
};

/**
 * Describes the message v1consortium.services.ListTestingProgramsRequest.
 * Use `create(ListTestingProgramsRequestSchema)` to create a new message.
 */
export const ListTestingProgramsRequestSchema: GenMessage<ListTestingProgramsRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 4);

/**
 * @generated from message v1consortium.services.ListTestingProgramsResponse
 */
export type ListTestingProgramsResponse = Message<"v1consortium.services.ListTestingProgramsResponse"> & {
  /**
   * @generated from field: repeated pbentity.TestingPrograms programs = 1;
   */
  programs: TestingPrograms[];
};

/**
 * Describes the message v1consortium.services.ListTestingProgramsResponse.
 * Use `create(ListTestingProgramsResponseSchema)` to create a new message.
 */
export const ListTestingProgramsResponseSchema: GenMessage<ListTestingProgramsResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 5);

/**
 * Drug Test Management
 *
 * @generated from message v1consortium.services.OrderDrugTestRequest
 */
export type OrderDrugTestRequest = Message<"v1consortium.services.OrderDrugTestRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * @generated from field: string program_id = 3;
   */
  programId: string;

  /**
   * "pre_employment", "random", "post_accident", etc.
   *
   * @generated from field: string test_type = 4;
   */
  testType: string;

  /**
   * "drug", "alcohol", "both"
   *
   * @generated from field: string test_category = 5;
   */
  testCategory: string;

  /**
   * @generated from field: bool is_dot_test = 6;
   */
  isDotTest: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp due_date = 7;
   */
  dueDate?: Timestamp;

  /**
   * @generated from field: string ordered_by = 8;
   */
  orderedBy: string;

  /**
   * @generated from field: string reason = 9;
   */
  reason: string;

  /**
   * @generated from field: string facility_preference = 10;
   */
  facilityPreference: string;
};

/**
 * Describes the message v1consortium.services.OrderDrugTestRequest.
 * Use `create(OrderDrugTestRequestSchema)` to create a new message.
 */
export const OrderDrugTestRequestSchema: GenMessage<OrderDrugTestRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 6);

/**
 * @generated from message v1consortium.services.OrderDrugTestResponse
 */
export type OrderDrugTestResponse = Message<"v1consortium.services.OrderDrugTestResponse"> & {
  /**
   * @generated from field: pbentity.DrugAlcoholTests test = 1;
   */
  test?: DrugAlcoholTests;

  /**
   * @generated from field: string external_order_id = 2;
   */
  externalOrderId: string;

  /**
   * @generated from field: string facility_name = 3;
   */
  facilityName: string;

  /**
   * @generated from field: string facility_address = 4;
   */
  facilityAddress: string;

  /**
   * @generated from field: string confirmation_code = 5;
   */
  confirmationCode: string;
};

/**
 * Describes the message v1consortium.services.OrderDrugTestResponse.
 * Use `create(OrderDrugTestResponseSchema)` to create a new message.
 */
export const OrderDrugTestResponseSchema: GenMessage<OrderDrugTestResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 7);

/**
 * @generated from message v1consortium.services.GetDrugTestRequest
 */
export type GetDrugTestRequest = Message<"v1consortium.services.GetDrugTestRequest"> & {
  /**
   * @generated from field: string test_id = 1;
   */
  testId: string;
};

/**
 * Describes the message v1consortium.services.GetDrugTestRequest.
 * Use `create(GetDrugTestRequestSchema)` to create a new message.
 */
export const GetDrugTestRequestSchema: GenMessage<GetDrugTestRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 8);

/**
 * @generated from message v1consortium.services.GetDrugTestResponse
 */
export type GetDrugTestResponse = Message<"v1consortium.services.GetDrugTestResponse"> & {
  /**
   * @generated from field: pbentity.DrugAlcoholTests test = 1;
   */
  test?: DrugAlcoholTests;
};

/**
 * Describes the message v1consortium.services.GetDrugTestResponse.
 * Use `create(GetDrugTestResponseSchema)` to create a new message.
 */
export const GetDrugTestResponseSchema: GenMessage<GetDrugTestResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 9);

/**
 * @generated from message v1consortium.services.UpdateDrugTestRequest
 */
export type UpdateDrugTestRequest = Message<"v1consortium.services.UpdateDrugTestRequest"> & {
  /**
   * @generated from field: string test_id = 1;
   */
  testId: string;

  /**
   * "ordered", "in_progress", "completed", "cancelled"
   *
   * @generated from field: string status = 2;
   */
  status: string;

  /**
   * "negative", "positive", "dilute", "invalid", "pending"
   *
   * @generated from field: string result = 3;
   */
  result: string;

  /**
   * @generated from field: google.protobuf.Timestamp collection_date = 4;
   */
  collectionDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp result_date = 5;
   */
  resultDate?: Timestamp;

  /**
   * @generated from field: string mro_reviewed_by = 6;
   */
  mroReviewedBy: string;

  /**
   * @generated from field: google.protobuf.Timestamp mro_review_date = 7;
   */
  mroReviewDate?: Timestamp;

  /**
   * JSON string
   *
   * @generated from field: string lab_results = 8;
   */
  labResults: string;

  /**
   * @generated from field: string notes = 9;
   */
  notes: string;
};

/**
 * Describes the message v1consortium.services.UpdateDrugTestRequest.
 * Use `create(UpdateDrugTestRequestSchema)` to create a new message.
 */
export const UpdateDrugTestRequestSchema: GenMessage<UpdateDrugTestRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 10);

/**
 * @generated from message v1consortium.services.UpdateDrugTestResponse
 */
export type UpdateDrugTestResponse = Message<"v1consortium.services.UpdateDrugTestResponse"> & {
  /**
   * @generated from field: pbentity.DrugAlcoholTests test = 1;
   */
  test?: DrugAlcoholTests;
};

/**
 * Describes the message v1consortium.services.UpdateDrugTestResponse.
 * Use `create(UpdateDrugTestResponseSchema)` to create a new message.
 */
export const UpdateDrugTestResponseSchema: GenMessage<UpdateDrugTestResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 11);

/**
 * @generated from message v1consortium.services.ListDrugTestsRequest
 */
export type ListDrugTestsRequest = Message<"v1consortium.services.ListDrugTestsRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * Optional: filter by user
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * Optional: filter by program
   *
   * @generated from field: string program_id = 3;
   */
  programId: string;

  /**
   * Optional: filter by test type
   *
   * @generated from field: string test_type = 4;
   */
  testType: string;

  /**
   * Optional: filter by status
   *
   * @generated from field: string status = 5;
   */
  status: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_date = 6;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_date = 7;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: int32 page = 8;
   */
  page: number;

  /**
   * @generated from field: int32 page_size = 9;
   */
  pageSize: number;
};

/**
 * Describes the message v1consortium.services.ListDrugTestsRequest.
 * Use `create(ListDrugTestsRequestSchema)` to create a new message.
 */
export const ListDrugTestsRequestSchema: GenMessage<ListDrugTestsRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 12);

/**
 * @generated from message v1consortium.services.ListDrugTestsResponse
 */
export type ListDrugTestsResponse = Message<"v1consortium.services.ListDrugTestsResponse"> & {
  /**
   * @generated from field: repeated pbentity.DrugAlcoholTests tests = 1;
   */
  tests: DrugAlcoholTests[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;
};

/**
 * Describes the message v1consortium.services.ListDrugTestsResponse.
 * Use `create(ListDrugTestsResponseSchema)` to create a new message.
 */
export const ListDrugTestsResponseSchema: GenMessage<ListDrugTestsResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 13);

/**
 * Random Testing Management
 *
 * @generated from message v1consortium.services.CreateRandomPoolRequest
 */
export type CreateRandomPoolRequest = Message<"v1consortium.services.CreateRandomPoolRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string program_id = 2;
   */
  programId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * "dot_drug", "dot_alcohol", "non_dot_drug", etc.
   *
   * @generated from field: string pool_type = 4;
   */
  poolType: string;

  /**
   * "quarterly", "monthly"
   *
   * @generated from field: string selection_frequency = 5;
   */
  selectionFrequency: string;

  /**
   * "25%", "10%", etc.
   *
   * @generated from field: string target_percentage = 6;
   */
  targetPercentage: string;

  /**
   * @generated from field: bool is_active = 7;
   */
  isActive: boolean;
};

/**
 * Describes the message v1consortium.services.CreateRandomPoolRequest.
 * Use `create(CreateRandomPoolRequestSchema)` to create a new message.
 */
export const CreateRandomPoolRequestSchema: GenMessage<CreateRandomPoolRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 14);

/**
 * @generated from message v1consortium.services.CreateRandomPoolResponse
 */
export type CreateRandomPoolResponse = Message<"v1consortium.services.CreateRandomPoolResponse"> & {
  /**
   * @generated from field: pbentity.RandomTestingPools pool = 1;
   */
  pool?: RandomTestingPools;
};

/**
 * Describes the message v1consortium.services.CreateRandomPoolResponse.
 * Use `create(CreateRandomPoolResponseSchema)` to create a new message.
 */
export const CreateRandomPoolResponseSchema: GenMessage<CreateRandomPoolResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 15);

/**
 * @generated from message v1consortium.services.AddUsersToPoolRequest
 */
export type AddUsersToPoolRequest = Message<"v1consortium.services.AddUsersToPoolRequest"> & {
  /**
   * @generated from field: string pool_id = 1;
   */
  poolId: string;

  /**
   * @generated from field: repeated string user_ids = 2;
   */
  userIds: string[];

  /**
   * @generated from field: string added_by = 3;
   */
  addedBy: string;
};

/**
 * Describes the message v1consortium.services.AddUsersToPoolRequest.
 * Use `create(AddUsersToPoolRequestSchema)` to create a new message.
 */
export const AddUsersToPoolRequestSchema: GenMessage<AddUsersToPoolRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 16);

/**
 * @generated from message v1consortium.services.AddUsersToPoolResponse
 */
export type AddUsersToPoolResponse = Message<"v1consortium.services.AddUsersToPoolResponse"> & {
  /**
   * @generated from field: repeated pbentity.PoolMemberships memberships = 1;
   */
  memberships: PoolMemberships[];
};

/**
 * Describes the message v1consortium.services.AddUsersToPoolResponse.
 * Use `create(AddUsersToPoolResponseSchema)` to create a new message.
 */
export const AddUsersToPoolResponseSchema: GenMessage<AddUsersToPoolResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 17);

/**
 * @generated from message v1consortium.services.RemoveUsersFromPoolRequest
 */
export type RemoveUsersFromPoolRequest = Message<"v1consortium.services.RemoveUsersFromPoolRequest"> & {
  /**
   * @generated from field: string pool_id = 1;
   */
  poolId: string;

  /**
   * @generated from field: repeated string user_ids = 2;
   */
  userIds: string[];

  /**
   * @generated from field: string removed_by = 3;
   */
  removedBy: string;

  /**
   * @generated from field: string reason = 4;
   */
  reason: string;
};

/**
 * Describes the message v1consortium.services.RemoveUsersFromPoolRequest.
 * Use `create(RemoveUsersFromPoolRequestSchema)` to create a new message.
 */
export const RemoveUsersFromPoolRequestSchema: GenMessage<RemoveUsersFromPoolRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 18);

/**
 * @generated from message v1consortium.services.RemoveUsersFromPoolResponse
 */
export type RemoveUsersFromPoolResponse = Message<"v1consortium.services.RemoveUsersFromPoolResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message v1consortium.services.RemoveUsersFromPoolResponse.
 * Use `create(RemoveUsersFromPoolResponseSchema)` to create a new message.
 */
export const RemoveUsersFromPoolResponseSchema: GenMessage<RemoveUsersFromPoolResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 19);

/**
 * @generated from message v1consortium.services.GetRandomPoolRequest
 */
export type GetRandomPoolRequest = Message<"v1consortium.services.GetRandomPoolRequest"> & {
  /**
   * @generated from field: string pool_id = 1;
   */
  poolId: string;
};

/**
 * Describes the message v1consortium.services.GetRandomPoolRequest.
 * Use `create(GetRandomPoolRequestSchema)` to create a new message.
 */
export const GetRandomPoolRequestSchema: GenMessage<GetRandomPoolRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 20);

/**
 * @generated from message v1consortium.services.GetRandomPoolResponse
 */
export type GetRandomPoolResponse = Message<"v1consortium.services.GetRandomPoolResponse"> & {
  /**
   * @generated from field: pbentity.RandomTestingPools pool = 1;
   */
  pool?: RandomTestingPools;

  /**
   * @generated from field: repeated pbentity.PoolMemberships members = 2;
   */
  members: PoolMemberships[];
};

/**
 * Describes the message v1consortium.services.GetRandomPoolResponse.
 * Use `create(GetRandomPoolResponseSchema)` to create a new message.
 */
export const GetRandomPoolResponseSchema: GenMessage<GetRandomPoolResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 21);

/**
 * @generated from message v1consortium.services.ListRandomPoolsRequest
 */
export type ListRandomPoolsRequest = Message<"v1consortium.services.ListRandomPoolsRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string program_id = 2;
   */
  programId: string;

  /**
   * @generated from field: bool is_active = 3;
   */
  isActive: boolean;
};

/**
 * Describes the message v1consortium.services.ListRandomPoolsRequest.
 * Use `create(ListRandomPoolsRequestSchema)` to create a new message.
 */
export const ListRandomPoolsRequestSchema: GenMessage<ListRandomPoolsRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 22);

/**
 * @generated from message v1consortium.services.ListRandomPoolsResponse
 */
export type ListRandomPoolsResponse = Message<"v1consortium.services.ListRandomPoolsResponse"> & {
  /**
   * @generated from field: repeated pbentity.RandomTestingPools pools = 1;
   */
  pools: RandomTestingPools[];
};

/**
 * Describes the message v1consortium.services.ListRandomPoolsResponse.
 * Use `create(ListRandomPoolsResponseSchema)` to create a new message.
 */
export const ListRandomPoolsResponseSchema: GenMessage<ListRandomPoolsResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 23);

/**
 * Random Selection Management
 *
 * @generated from message v1consortium.services.ConductRandomSelectionRequest
 */
export type ConductRandomSelectionRequest = Message<"v1consortium.services.ConductRandomSelectionRequest"> & {
  /**
   * @generated from field: string pool_id = 1;
   */
  poolId: string;

  /**
   * @generated from field: int32 number_to_select = 2;
   */
  numberToSelect: number;

  /**
   * @generated from field: string conducted_by = 3;
   */
  conductedBy: string;

  /**
   * "Q1 2025", "January 2025", etc.
   *
   * @generated from field: string selection_period = 4;
   */
  selectionPeriod: string;

  /**
   * "weighted", "simple_random", "stratified"
   *
   * @generated from field: string algorithm = 5;
   */
  algorithm: string;
};

/**
 * Describes the message v1consortium.services.ConductRandomSelectionRequest.
 * Use `create(ConductRandomSelectionRequestSchema)` to create a new message.
 */
export const ConductRandomSelectionRequestSchema: GenMessage<ConductRandomSelectionRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 24);

/**
 * @generated from message v1consortium.services.ConductRandomSelectionResponse
 */
export type ConductRandomSelectionResponse = Message<"v1consortium.services.ConductRandomSelectionResponse"> & {
  /**
   * @generated from field: pbentity.RandomSelections selection = 1;
   */
  selection?: RandomSelections;

  /**
   * @generated from field: repeated pbentity.RandomSelectionMembers selected_members = 2;
   */
  selectedMembers: RandomSelectionMembers[];

  /**
   * @generated from field: repeated string selected_user_ids = 3;
   */
  selectedUserIds: string[];
};

/**
 * Describes the message v1consortium.services.ConductRandomSelectionResponse.
 * Use `create(ConductRandomSelectionResponseSchema)` to create a new message.
 */
export const ConductRandomSelectionResponseSchema: GenMessage<ConductRandomSelectionResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 25);

/**
 * @generated from message v1consortium.services.GetRandomSelectionRequest
 */
export type GetRandomSelectionRequest = Message<"v1consortium.services.GetRandomSelectionRequest"> & {
  /**
   * @generated from field: string selection_id = 1;
   */
  selectionId: string;
};

/**
 * Describes the message v1consortium.services.GetRandomSelectionRequest.
 * Use `create(GetRandomSelectionRequestSchema)` to create a new message.
 */
export const GetRandomSelectionRequestSchema: GenMessage<GetRandomSelectionRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 26);

/**
 * @generated from message v1consortium.services.GetRandomSelectionResponse
 */
export type GetRandomSelectionResponse = Message<"v1consortium.services.GetRandomSelectionResponse"> & {
  /**
   * @generated from field: pbentity.RandomSelections selection = 1;
   */
  selection?: RandomSelections;

  /**
   * @generated from field: repeated pbentity.RandomSelectionMembers members = 2;
   */
  members: RandomSelectionMembers[];
};

/**
 * Describes the message v1consortium.services.GetRandomSelectionResponse.
 * Use `create(GetRandomSelectionResponseSchema)` to create a new message.
 */
export const GetRandomSelectionResponseSchema: GenMessage<GetRandomSelectionResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 27);

/**
 * @generated from message v1consortium.services.ListRandomSelectionsRequest
 */
export type ListRandomSelectionsRequest = Message<"v1consortium.services.ListRandomSelectionsRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string pool_id = 2;
   */
  poolId: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_date = 3;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_date = 4;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: int32 page = 5;
   */
  page: number;

  /**
   * @generated from field: int32 page_size = 6;
   */
  pageSize: number;
};

/**
 * Describes the message v1consortium.services.ListRandomSelectionsRequest.
 * Use `create(ListRandomSelectionsRequestSchema)` to create a new message.
 */
export const ListRandomSelectionsRequestSchema: GenMessage<ListRandomSelectionsRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 28);

/**
 * @generated from message v1consortium.services.ListRandomSelectionsResponse
 */
export type ListRandomSelectionsResponse = Message<"v1consortium.services.ListRandomSelectionsResponse"> & {
  /**
   * @generated from field: repeated pbentity.RandomSelections selections = 1;
   */
  selections: RandomSelections[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  /**
   * @generated from field: int32 page = 3;
   */
  page: number;

  /**
   * @generated from field: int32 page_size = 4;
   */
  pageSize: number;
};

/**
 * Describes the message v1consortium.services.ListRandomSelectionsResponse.
 * Use `create(ListRandomSelectionsResponseSchema)` to create a new message.
 */
export const ListRandomSelectionsResponseSchema: GenMessage<ListRandomSelectionsResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 29);

/**
 * @generated from message v1consortium.services.ValidateRandomSelectionRequest
 */
export type ValidateRandomSelectionRequest = Message<"v1consortium.services.ValidateRandomSelectionRequest"> & {
  /**
   * @generated from field: string selection_id = 1;
   */
  selectionId: string;

  /**
   * @generated from field: string validated_by = 2;
   */
  validatedBy: string;

  /**
   * @generated from field: string notes = 3;
   */
  notes: string;
};

/**
 * Describes the message v1consortium.services.ValidateRandomSelectionRequest.
 * Use `create(ValidateRandomSelectionRequestSchema)` to create a new message.
 */
export const ValidateRandomSelectionRequestSchema: GenMessage<ValidateRandomSelectionRequest> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 30);

/**
 * @generated from message v1consortium.services.ValidateRandomSelectionResponse
 */
export type ValidateRandomSelectionResponse = Message<"v1consortium.services.ValidateRandomSelectionResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message v1consortium.services.ValidateRandomSelectionResponse.
 * Use `create(ValidateRandomSelectionResponseSchema)` to create a new message.
 */
export const ValidateRandomSelectionResponseSchema: GenMessage<ValidateRandomSelectionResponse> = /*@__PURE__*/
  messageDesc(file_services_v1_drug_testing, 31);

/**
 * Drug Testing Service Definition
 *
 * @generated from service v1consortium.services.DrugTestingService
 */
export const DrugTestingService: GenService<{
  /**
   * Testing Program Management
   *
   * @generated from rpc v1consortium.services.DrugTestingService.CreateTestingProgram
   */
  createTestingProgram: {
    methodKind: "unary";
    input: typeof CreateTestingProgramRequestSchema;
    output: typeof CreateTestingProgramResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.GetTestingProgram
   */
  getTestingProgram: {
    methodKind: "unary";
    input: typeof GetTestingProgramRequestSchema;
    output: typeof GetTestingProgramResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.ListTestingPrograms
   */
  listTestingPrograms: {
    methodKind: "unary";
    input: typeof ListTestingProgramsRequestSchema;
    output: typeof ListTestingProgramsResponseSchema;
  },
  /**
   * Drug Test Management
   *
   * @generated from rpc v1consortium.services.DrugTestingService.OrderDrugTest
   */
  orderDrugTest: {
    methodKind: "unary";
    input: typeof OrderDrugTestRequestSchema;
    output: typeof OrderDrugTestResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.GetDrugTest
   */
  getDrugTest: {
    methodKind: "unary";
    input: typeof GetDrugTestRequestSchema;
    output: typeof GetDrugTestResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.UpdateDrugTest
   */
  updateDrugTest: {
    methodKind: "unary";
    input: typeof UpdateDrugTestRequestSchema;
    output: typeof UpdateDrugTestResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.ListDrugTests
   */
  listDrugTests: {
    methodKind: "unary";
    input: typeof ListDrugTestsRequestSchema;
    output: typeof ListDrugTestsResponseSchema;
  },
  /**
   * Random Testing Pool Management
   *
   * @generated from rpc v1consortium.services.DrugTestingService.CreateRandomPool
   */
  createRandomPool: {
    methodKind: "unary";
    input: typeof CreateRandomPoolRequestSchema;
    output: typeof CreateRandomPoolResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.AddUsersToPool
   */
  addUsersToPool: {
    methodKind: "unary";
    input: typeof AddUsersToPoolRequestSchema;
    output: typeof AddUsersToPoolResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.RemoveUsersFromPool
   */
  removeUsersFromPool: {
    methodKind: "unary";
    input: typeof RemoveUsersFromPoolRequestSchema;
    output: typeof RemoveUsersFromPoolResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.GetRandomPool
   */
  getRandomPool: {
    methodKind: "unary";
    input: typeof GetRandomPoolRequestSchema;
    output: typeof GetRandomPoolResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.ListRandomPools
   */
  listRandomPools: {
    methodKind: "unary";
    input: typeof ListRandomPoolsRequestSchema;
    output: typeof ListRandomPoolsResponseSchema;
  },
  /**
   * Random Selection Management
   *
   * @generated from rpc v1consortium.services.DrugTestingService.ConductRandomSelection
   */
  conductRandomSelection: {
    methodKind: "unary";
    input: typeof ConductRandomSelectionRequestSchema;
    output: typeof ConductRandomSelectionResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.GetRandomSelection
   */
  getRandomSelection: {
    methodKind: "unary";
    input: typeof GetRandomSelectionRequestSchema;
    output: typeof GetRandomSelectionResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.ListRandomSelections
   */
  listRandomSelections: {
    methodKind: "unary";
    input: typeof ListRandomSelectionsRequestSchema;
    output: typeof ListRandomSelectionsResponseSchema;
  },
  /**
   * @generated from rpc v1consortium.services.DrugTestingService.ValidateRandomSelection
   */
  validateRandomSelection: {
    methodKind: "unary";
    input: typeof ValidateRandomSelectionRequestSchema;
    output: typeof ValidateRandomSelectionResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_services_v1_drug_testing, 0);

