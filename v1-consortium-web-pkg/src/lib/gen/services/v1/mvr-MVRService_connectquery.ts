// @generated by protoc-gen-connect-query v2.2.0 with parameter "target=ts"
// @generated from file services/v1/mvr.proto (package v1consortium.services, syntax proto3)
/* eslint-disable */

import { MVRService } from "./mvr_pb";

/**
 * MVR Report Management
 *
 * @generated from rpc v1consortium.services.MVRService.OrderMVR
 */
export const orderMVR = MVRService.method.orderMVR;

/**
 * @generated from rpc v1consortium.services.MVRService.GetMVRReport
 */
export const getMVRReport = MVRService.method.getMVRReport;

/**
 * @generated from rpc v1consortium.services.MVRService.UpdateMVRReport
 */
export const updateMVRReport = MVRService.method.updateMVRReport;

/**
 * @generated from rpc v1consortium.services.MVRService.ListMVRReports
 */
export const listMVRReports = MVRService.method.listMVRReports;

/**
 * MVR Violation Management
 *
 * @generated from rpc v1consortium.services.MVRService.AddMVRViolation
 */
export const addMVRViolation = MVRService.method.addMVRViolation;

/**
 * @generated from rpc v1consortium.services.MVRService.UpdateMVRViolation
 */
export const updateMVRViolation = MVRService.method.updateMVRViolation;

/**
 * @generated from rpc v1consortium.services.MVRService.ListMVRViolations
 */
export const listMVRViolations = MVRService.method.listMVRViolations;

/**
 * Continuous Monitoring
 *
 * @generated from rpc v1consortium.services.MVRService.EnableContinuousMonitoring
 */
export const enableContinuousMonitoring = MVRService.method.enableContinuousMonitoring;

/**
 * @generated from rpc v1consortium.services.MVRService.GetMonitoringStatus
 */
export const getMonitoringStatus = MVRService.method.getMonitoringStatus;

/**
 * Analytics and Reporting
 *
 * @generated from rpc v1consortium.services.MVRService.GetMVRAnalytics
 */
export const getMVRAnalytics = MVRService.method.getMVRAnalytics;

/**
 * Provider Integration
 *
 * @generated from rpc v1consortium.services.MVRService.SyncProviderData
 */
export const syncProviderData = MVRService.method.syncProviderData;
