// @generated by protoc-gen-connect-query v2.2.0 with parameter "target=ts"
// @generated from file services/v1/workflow.proto (package v1consortium.services, syntax proto3)
/* eslint-disable */

import { WorkflowService } from "./workflow_pb";

/**
 * Generic Workflow Management
 *
 * @generated from rpc v1consortium.services.WorkflowService.StartWorkflow
 */
export const startWorkflow = WorkflowService.method.startWorkflow;

/**
 * @generated from rpc v1consortium.services.WorkflowService.GetWorkflow
 */
export const getWorkflow = WorkflowService.method.getWorkflow;

/**
 * @generated from rpc v1consortium.services.WorkflowService.ListWorkflows
 */
export const listWorkflows = WorkflowService.method.listWorkflows;

/**
 * @generated from rpc v1consortium.services.WorkflowService.UpdateWorkflow
 */
export const updateWorkflow = WorkflowService.method.updateWorkflow;

/**
 * @generated from rpc v1consortium.services.WorkflowService.CancelWorkflow
 */
export const cancelWorkflow = WorkflowService.method.cancelWorkflow;

/**
 * @generated from rpc v1consortium.services.WorkflowService.RetryWorkflow
 */
export const retryWorkflow = WorkflowService.method.retryWorkflow;

/**
 * Specific Workflow Types
 *
 * @generated from rpc v1consortium.services.WorkflowService.StartDrugTestOrderWorkflow
 */
export const startDrugTestOrderWorkflow = WorkflowService.method.startDrugTestOrderWorkflow;

/**
 * @generated from rpc v1consortium.services.WorkflowService.StartMVRMonitoringWorkflow
 */
export const startMVRMonitoringWorkflow = WorkflowService.method.startMVRMonitoringWorkflow;

/**
 * @generated from rpc v1consortium.services.WorkflowService.StartRandomSelectionWorkflow
 */
export const startRandomSelectionWorkflow = WorkflowService.method.startRandomSelectionWorkflow;

/**
 * @generated from rpc v1consortium.services.WorkflowService.StartBackgroundCheckWorkflow
 */
export const startBackgroundCheckWorkflow = WorkflowService.method.startBackgroundCheckWorkflow;

/**
 * @generated from rpc v1consortium.services.WorkflowService.StartNotificationWorkflow
 */
export const startNotificationWorkflow = WorkflowService.method.startNotificationWorkflow;

/**
 * Workflow Analytics and Monitoring
 *
 * @generated from rpc v1consortium.services.WorkflowService.GetWorkflowAnalytics
 */
export const getWorkflowAnalytics = WorkflowService.method.getWorkflowAnalytics;

/**
 * @generated from rpc v1consortium.services.WorkflowService.GetFailedWorkflows
 */
export const getFailedWorkflows = WorkflowService.method.getFailedWorkflows;

/**
 * @generated from rpc v1consortium.services.WorkflowService.GetRunningWorkflows
 */
export const getRunningWorkflows = WorkflowService.method.getRunningWorkflows;
